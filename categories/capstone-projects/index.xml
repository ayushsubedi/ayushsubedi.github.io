<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Capstone Projects on Ayush Subedi</title>
    <link>https://ayushsubedi.github.io/categories/capstone-projects/</link>
    <description>Recent content in Capstone Projects on Ayush Subedi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 02 Dec 2021 12:09:16 +0545</lastBuildDate>
    
	<atom:link href="https://ayushsubedi.github.io/categories/capstone-projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ride Hailing Analytics</title>
      <link>https://ayushsubedi.github.io/posts/ride_sharing_analytics/</link>
      <pubDate>Thu, 02 Dec 2021 12:09:16 +0545</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/ride_sharing_analytics/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;h3 id=&#34;introduction-to-ride-hailing&#34;&gt;Introduction to Ride Hailing&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Uber_taxi_in_Moscow.jpg/640px-Uber_taxi_in_Moscow.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Credit: Wikimedia.org&lt;/p&gt;
&lt;p&gt;At present, it is pretty common to hail a ride to get from one place to the other at a tap of a button. Almost all major cities in the world have some sort of ride-hailing service. Uber, Lyft, Didi, Ola, Gojek, etc. are some examples of service providers that come to mind. Additionally, the service is also proliferating to smaller cities and has become commonplace in many parts of the world. Analytics is a key component in making sure the service is provided efficiently. All of the aforementioned companies invest heavily in data science and analytics to be competitive and to provide better services.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For the course project, I will focus on Ride-Hailing services (not Ride Sharing services). See the difference &lt;a href=&#34;https://www.ecolane.com/blog/ride-hailing-vs.-ride-sharing-the-key-difference-and-why-it-matters&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Predominantly, ride-hailing functions as a &lt;em&gt;Gig Economy&lt;/em&gt;. The drivers (sometimes referred to as partners, captains, etc.) are mostly independent contractors who bring their own vehicle and work at their own time and are paid based on their time commitment. This variability requires monitoring, sophisticated algorithms, good incentives, competitive pricing to passengers, etc. which is also common in other gig economy jobs. In most cases, the analytics models that will be built for one gig economy can be tweaked to fit another one as well.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s look at a few components of Ride-hailing that will be relevant for how we frame our models and the data we use.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For the course project, &amp;ldquo;passengers&amp;rdquo; are referred to as service requesters/receivers and &amp;ldquo;drivers&amp;rdquo; are referred to as service providers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;components-of-the-problem&#34;&gt;Components of the problem&lt;/h3&gt;
&lt;hr&gt;
&lt;h3 id=&#34;balancing-act-supply-and-demand-and-chicken-and-egg-problem&#34;&gt;Balancing act: Supply and Demand, and Chicken and Egg Problem&lt;/h3&gt;
&lt;p&gt;There is a balancing act that all of these ride-sharing platforms need to perform to be efficient. A healthy ratio between driver and passenger (to go more granular, for a segment of geographic area at a given time) is very important.  The balancing act is even crucial when a ride-hailing service decides to introduce itself to a new city (especially one that is new to ride-hailing).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If an area has more drivers than demand from passengers, the drivers might not get ride requests causing them to lose interest and find a different job or move to a different competition.&lt;/li&gt;
&lt;li&gt;If an area has more passengers than a supply of drivers, the passengers might not get their ride requests accepted causing them to move onto another (direct/indirect) competition.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From an analytics perspective, this is a difficult problem to solve. However, good analytics can also be a competitive advantage here.&lt;/p&gt;
&lt;h3 id=&#34;pricing&#34;&gt;Pricing&lt;/h3&gt;
&lt;p&gt;Pricing is a by-product of the balancing act described above. The pricing must be competitive enough to lure the supply and the demand pool. The driver should feel like the pricing justifies the time, effort, and resources supplied. The passenger should feel the amount paid for the service justifies the service received.&lt;/p&gt;
&lt;p&gt;Few ride-hailing services opt-out for transparent and fixed payment (i.e the price is only dictated by the distance to destination), while some have complex pricing strategies to stand out, lure passengers or drivers, and manage supply and demand effectively.&lt;/p&gt;
&lt;h3 id=&#34;dynamic-pricing&#34;&gt;Dynamic Pricing&lt;/h3&gt;
&lt;p&gt;Some ride-hailing services implement dynamic pricing as a way to balance the chicken and egg problem described above. This is a large-scale, complex analytics problem involving several variables. Additionally, driver bonuses, discounts, and referrals might constitute the pricing strategy as well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://thumbor.forbes.com/thumbor/711x274/https://blogs-images.forbes.com/nicolemartin1/files/2019/03/dynamic-pricing.jpg?width=960&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Credit: Forbes&lt;/p&gt;
&lt;h3 id=&#34;competition-direct-and-indirect&#34;&gt;Competition (Direct and Indirect)&lt;/h3&gt;
&lt;h4 id=&#34;direct-competition-passenger&#34;&gt;Direct Competition (Passenger)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;other ride hailing services&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;direct-competition-driver&#34;&gt;Direct Competition (Driver)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;other ride-hailing services&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;indirect-competition-passenger&#34;&gt;Indirect Competition (Passenger)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;public transportation&lt;/li&gt;
&lt;li&gt;taxi/cab&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;indirect-competition-driver&#34;&gt;Indirect Competition (Driver)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;other employment opportunities&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://thumbor.forbes.com/thumbor/fit-in/1200x0/filters%3Aformat%28jpg%29/https%3A%2F%2Fblogs-images.forbes.com%2Fliyanchen%2Ffiles%2F2015%2F09%2F0908_uber-map2_2000-1940x1487.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Credit: Forbes&lt;/p&gt;
&lt;h2 id=&#34;descriptive-analysis&#34;&gt;Descriptive analysis&lt;/h2&gt;
&lt;p&gt;Before we build complex models, it is essential to understand how the business/service is performing. These descriptive analyses will lay the foundation for us when we build complex and combined models later on.&lt;/p&gt;
&lt;h3 id=&#34;ride-completioncancellation-rate&#34;&gt;Ride Completion/Cancellation rate&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;What is the ride completion rate?&lt;/li&gt;
&lt;li&gt;To be more granular, what is the ride completion rate at a geographic segment of the city at a particular time?&lt;/li&gt;
&lt;li&gt;What is the ride cancellation rate?&lt;/li&gt;
&lt;li&gt;Similar to before, what is the ride cancellation rate at a geographic segment of the city at a particular time?&lt;/li&gt;
&lt;li&gt;Why do passengers cancel rides?&lt;/li&gt;
&lt;li&gt;Is cancellation more prominent in one area compared to the other?&lt;/li&gt;
&lt;li&gt;Is this dependent on the time of the day?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATA&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;passenger_id&lt;/li&gt;
&lt;li&gt;driver_id&lt;/li&gt;
&lt;li&gt;latitude (pickup, drop)&lt;/li&gt;
&lt;li&gt;longitude (pickup, drop)&lt;/li&gt;
&lt;li&gt;timestamps (requested, accepted, picked up, dropped, canceled)&lt;/li&gt;
&lt;li&gt;completion_status&lt;/li&gt;
&lt;li&gt;cancellation_reason&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;late-arrival-rate&#34;&gt;Late arrival rate&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;What is the late arrival rate?&lt;/li&gt;
&lt;li&gt;what is the late arrival rate at a geographic segment of the city at a particular time?&lt;/li&gt;
&lt;li&gt;Is the late arrival rate prominent for some time of the day or for a particular geographical area?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATA&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;passenger_id&lt;/li&gt;
&lt;li&gt;driver_id&lt;/li&gt;
&lt;li&gt;latitude (pickup, drop)&lt;/li&gt;
&lt;li&gt;longitude (pickup, drop)&lt;/li&gt;
&lt;li&gt;timestamps (requested, accepted, picked up, dropped, canceled)&lt;/li&gt;
&lt;li&gt;completion_status&lt;/li&gt;
&lt;li&gt;cancellation_reason&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;activation-acquisition-retention-referral-revenue&#34;&gt;Activation, Acquisition, Retention, Referral, Revenue&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;What does the pirate metric funnel look like?&lt;/li&gt;
&lt;li&gt;Is there a specific area where the business should focus to improve business/efficiency?&lt;/li&gt;
&lt;li&gt;Is the funnel leaking somewhere?&lt;/li&gt;
&lt;li&gt;What is the passenger/driver churn rate?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATA&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;passenger_id/driver_id&lt;/li&gt;
&lt;li&gt;timestamps (created_date, last_ride_date)&lt;/li&gt;
&lt;li&gt;total_amount_spent_on_platform / total_money_made&lt;/li&gt;
&lt;li&gt;total_rides&lt;/li&gt;
&lt;li&gt;num_of_referrals&lt;/li&gt;
&lt;li&gt;acquisition_channel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://hygger.io/wp-content/uploads/2018/01/Main-EN.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Credit: hygger.io&lt;/p&gt;
&lt;h3 id=&#34;channels&#34;&gt;Channels&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;What is the acquisition rate from different marketing channels for drivers or for passengers?&lt;/li&gt;
&lt;li&gt;What marketing channel is more apt/effective for different demography/user segments?&lt;/li&gt;
&lt;li&gt;Can we use the multi-arm bandits model to identify a balance between exploration and exploitation to test on different channels?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATA&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;passenger_id/driver_id&lt;/li&gt;
&lt;li&gt;timestamps (created_date)&lt;/li&gt;
&lt;li&gt;acquisition_channel&lt;/li&gt;
&lt;li&gt;total_amount_spent_on_platform / total_money_made&lt;/li&gt;
&lt;li&gt;passenger/driver demographic information (age, gender, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;user-analysis&#34;&gt;User Analysis&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;What does the demography (social, cultural, economic) of the driver look like?&lt;/li&gt;
&lt;li&gt;What does the demography (social, cultural, economic) of the passenger look like?&lt;/li&gt;
&lt;li&gt;What does the demography of the city look like?&lt;/li&gt;
&lt;li&gt;What does the demography of the segment that uses the service the most look like?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATA&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;passenger_id/driver_id&lt;/li&gt;
&lt;li&gt;timestamps (created_date)&lt;/li&gt;
&lt;li&gt;acquisition_channel&lt;/li&gt;
&lt;li&gt;total_amount_spent_on_platform / total_money_made&lt;/li&gt;
&lt;li&gt;passenger/driver/city demographic information (age, gender etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;driver-rankingdriver-performance&#34;&gt;Driver Ranking/Driver Performance&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;How is a driver performing? (this could be based on multiple factors including customer rating, and other factors)&lt;/li&gt;
&lt;li&gt;Based on the index for performance, what is the rank of a driver?&lt;/li&gt;
&lt;li&gt;What is the rank of a driver among a segment of drivers? (this will be useful for priority queue for driver dispatching)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATA&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;driver_id&lt;/li&gt;
&lt;li&gt;timestamps&lt;/li&gt;
&lt;li&gt;average_rating&lt;/li&gt;
&lt;li&gt;rides_complete_rate&lt;/li&gt;
&lt;li&gt;last_ride_date&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;predictive-analysis&#34;&gt;Predictive analysis&lt;/h2&gt;
&lt;p&gt;If we are looking to make the system more efficient, it is also very important to understand what the future holds.&lt;/p&gt;
&lt;h3 id=&#34;growth-in-rides&#34;&gt;Growth in rides&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;What is the number of expected daily rides next day/week/month/year?&lt;/li&gt;
&lt;li&gt;What is the expected revenue for the next day/week/month/year?&lt;/li&gt;
&lt;li&gt;Is there a daily/weekly/monthly seasonality?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATA&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;timestamp (daily)&lt;/li&gt;
&lt;li&gt;num_of_ride (completed rides or ride requests)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;passenger-growth&#34;&gt;Passenger growth&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;What is the number of expected passenger growth next day/week/month/year?&lt;/li&gt;
&lt;li&gt;Is there a daily/weekly/monthly seasonality?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATA&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;timestamp (daily)&lt;/li&gt;
&lt;li&gt;num_of_unique_passengers (acquisition or ride request)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;driver-growth&#34;&gt;Driver growth&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;What is the number of expected driver growth next day/week/month/year?&lt;/li&gt;
&lt;li&gt;Is there a daily/weekly/monthly seasonality?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATA&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;timestamp (daily)&lt;/li&gt;
&lt;li&gt;num_of_unique_drivers (acquisition or ride request)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;churn-over-the-period-of-time&#34;&gt;Churn over the period of time&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;What is the expected churn in the next day/week/month/year?&lt;/li&gt;
&lt;li&gt;Is there a daily/weekly/monthly seasonality?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DATA&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;timestamp (passenger acquisition)&lt;/li&gt;
&lt;li&gt;passenger&amp;rsquo;s number of rides each month (grouped acquisition to present)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;prescriptive-analysis&#34;&gt;Prescriptive analysis&lt;/h2&gt;
&lt;p&gt;Descriptive and Predictive analysis will help us move towards prescriptive analysis, especially for optimization models. These models will help the service provider in decision making, especially with regards to an increase in efficiency for drivers and passengers.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;ratio-of-drivers-to-passengers&#34;&gt;Ratio of drivers to passengers&lt;/h3&gt;
&lt;h4 id=&#34;what-is-the-ideal-ratio-of-the-passenger-to-the-driver-to-maximize-rides-completion-rate&#34;&gt;What is the ideal ratio of the passenger to the driver to maximize rides completion rate?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Given&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Voronoi clustering for geographic indexing based on geographic hotspots (other indexing methods are more efficient like h3 developed by Uber, but Voronoi can be used to build something similar as well. I wanted to use the topics covered in this class)&lt;/li&gt;
&lt;li&gt;rides data (requested, canceled, completed)&lt;/li&gt;
&lt;li&gt;passenger data (raw data and data after descriptive analysis performed: Pirate metrics etc.)&lt;/li&gt;
&lt;li&gt;driver data&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Optimization
&lt;ul&gt;
&lt;li&gt;with constraints: num_of_rides should be greater than a threshold (comes from future rides data)&lt;/li&gt;
&lt;li&gt;with objective functions: maximize rides completion rate for each geographic segment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;to find an optimal driver to passenger ratio&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Regression (or logistic regression if we only care about a healthy/unhealthy ratio) can also be used to do something similar as well.&lt;/li&gt;
&lt;li&gt;Additionally, the result from the model can also be used to model advertisement campaigns for the future if we find the number of driver or passenger (in a particular geographic area) need to be increased for a stable ratio.&lt;/li&gt;
&lt;li&gt;This is an important indicator because it allows the service provider to focus on growth while keeping this indicator at a healthy level.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;dynamic-pricing-1&#34;&gt;Dynamic pricing&lt;/h3&gt;
&lt;h4 id=&#34;what-should-the-dynamicsurge-pricing-be-at-a-given-time&#34;&gt;What should the dynamic/surge pricing be at a given time?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Given&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;ratio of the driver to passenger&lt;/li&gt;
&lt;li&gt;paying capacity of passengers (based on descriptive analysis of users, useful for capping at some multiplier so that it does not go wild)&lt;/li&gt;
&lt;li&gt;number of requests in the queue in a geographic segment&lt;/li&gt;
&lt;li&gt;competition surge at the moment&lt;/li&gt;
&lt;li&gt;number of requests completed in the geographic segment (and neighboring segment) in last x minutes (arbitrary but can be defined by waiting for time analysis from descriptive analysis)&lt;/li&gt;
&lt;li&gt;geographic location information (grid-based on Voronoi for the availability of drivers in other cells)&lt;/li&gt;
&lt;li&gt;number of drivers that will be free (complete a ride soon or are predicted to come online soon) in the grid or neighboring grids&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Linear regression&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;to find ideal dynamic pricing multiplier&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The cap might/might not be necessary, and that might be another analytics problem altogether. There have been some cases where a natural disaster/terrorist attack increased surge multiplier to an exorbitant number causing massive backlash.&lt;/li&gt;
&lt;li&gt;grid above refers to one unit of Voronoi based geographic segmentation&lt;/li&gt;
&lt;li&gt;It is necessary to study the correlation of some of the predictors mentioned above.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;ride-dispatching&#34;&gt;Ride Dispatching&lt;/h3&gt;
&lt;h4 id=&#34;what-is-a-robust-ride-dispatching-mechanism-that-will-increase-passengers-and-drivers&#34;&gt;What is a robust ride dispatching mechanism that will increase passengers and drivers?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Given&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Drivers in Geographic Grid (and neighboring Grid)&lt;/li&gt;
&lt;li&gt;Driver Rating/Driver Ranking&lt;/li&gt;
&lt;li&gt;Geographic Grid&lt;/li&gt;
&lt;li&gt;Pickup/Drop location (distance and Grid)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Optimization
&lt;ul&gt;
&lt;li&gt;with constraints: the probability of each driver getting ride should be close to 1, waiting time should be less than some threshold for the request to be accepted  or not accepted (which comes from descriptive analysis), the time between request dispatching (time window a driver gets before the request is passed on to a different driver, also comes from descriptive analysis) should be equal to the acceptable waiting time divided by some constant (integer)&lt;/li&gt;
&lt;li&gt;with objective functions: maximize rides completion rate for each geographic segment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;** Notes **&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Queuing models can also be here to identify correct values for the dispatching system (waiting time, dynamic geographic grid, etc.). However, there is a need to check the distribution of different events (booking created, booking accepted, waiting time, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;It seems analytics is extremely relevant in all aspects of ride-hailing. In this project, I merely covered a few use cases, with one or two relevant models. Even with this brief exploration, I can conclude that analytics can lead to better outcomes for both drivers and passengers. In the article that was used as a reference for the course project, Didi looks into using analytics to solve some of the aforementioned problems. While there approch will be more sophisticated, the above models can also serve as a baseline.&lt;/p&gt;
&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.remix.com/blog/ride-hailing-vs-ride-sharing-the-difference-explained&#34;&gt;https://www.remix.com/blog/ride-hailing-vs-ride-sharing-the-difference-explained&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.uber.com/&#34;&gt;https://www.uber.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.lyft.com/&#34;&gt;https://www.lyft.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.didiglobal.com/&#34;&gt;https://www.didiglobal.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.informs.org/Impact/O.R.-Analytics-Success-Stories/Increasing-ride-share-efficiency-Better-outcomes-for-drivers-and-passengers&#34;&gt;https://www.informs.org/Impact/O.R.-Analytics-Success-Stories/Increasing-ride-share-efficiency-Better-outcomes-for-drivers-and-passengers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Compiler from Scratch</title>
      <link>https://ayushsubedi.github.io/posts/ducompiler/</link>
      <pubDate>Thu, 05 Sep 2013 17:12:41 +0545</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/ducompiler/</guid>
      <description>&lt;h3 id=&#34;the-du-compiler&#34;&gt;The Du Compiler:&lt;/h3&gt;
&lt;p&gt;For our Computer Science capstone project, we take on the beast - building a compiler from scratch. We had about three months to do it but we really had no clue of what we were doing for the first month and a half. Although we knew plenty of what there was to know about compilers in theory, we soon realized that building one from scratch was not going to be easy. We started with baby steps, and by the time the project was due, we were taking giant leaps (we had no other option). In the end, it turned out to be a reasonably fine compiler and an excellent experience. During these three months, I had the best and the worst experiences of my academic life. Therefore, this project is really special.&lt;/p&gt;
&lt;p&gt;Since this project belongs to two other people also, I won&amp;rsquo;t be posting any source code. This post will just have some example code for Du-Compiler.&lt;/p&gt;
&lt;p&gt;Finally, for anyone looking for a reasonably challenging senior projects, I would strongly encourage building a compiler. I say this for couple of reasons. First of all, it changes the way we look at code. It gives a better understanding of what exactly happens when the compile button is hit. In another words, it makes you aware of what is going on internally. Secondly, it involves learning/relearning several Computer Science topics such as regular expressions, hash table, data-structures, tree traversals, assembly level programming etc. It also involves A LOT of coding. When it all pans out, you are going to love what you have in your skill set.&lt;/p&gt;
&lt;h4 id=&#34;examples&#34;&gt;Examples&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;//Hello World
duhawk helloworld{
  duPrint(%Hello World%);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;//Simple Addition
duhawk simpleAdd{ 
  int a;
  a=5;
  int b;    
  b = a + 5;
  duPrint b;  
}
//Result: 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;//Simple Pattern
duhawk test{ 
  int i;
  i=1;
  int j;
  j=1;
  while (i&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;&lt;/span&gt;=10){
   j=1;
   while (j&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;&lt;/span&gt;=i){
    duPrint(%*%);
    j=j + 1;
   }
   duPrintln(%%);
   i= i + 1;
  }
} 

/*
Result
*
**
***
****
*****
******
*******
********
*********
**********
*/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;duhawk test{ 
int c;  
int d;     
duPrint (%Multiplication table of: %);  
duInput a;
duPrint (%upto: %);
duInput b;     

 for (c=1;c&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;&lt;/span&gt;=b;c=c + 1){
         duPrint a;
         duPrint (% X %);
         duPrint c;
         duPrint (% = %);
         d = a*c;
         duPrintln d;    
        }
} 

/*
Input for a = 19
Input for b = 15
Result:
Multiplication table of: 19
upto: 15
19 X 1 = 19
19 X 2 = 38
19 X 3 = 57
19 X 4 = 76
19 X 5 = 95
19 X 6 = 114
19 X 7 = 133
19 X 8 = 152
19 X 9 = 171
19 X 10 = 190
19 X 11 = 209
19 X 12 = 228
19 X 13 = 247
19 X 14 = 266
19 X 15 = 285
*/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Area of the Mandelbrot Set</title>
      <link>https://ayushsubedi.github.io/posts/mandelbrot_area/</link>
      <pubDate>Wed, 02 Jan 2013 10:01:09 +0545</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/mandelbrot_area/</guid>
      <description>&lt;h3 id=&#34;area-of-the-mandelbrot-set&#34;&gt;Area of the Mandelbrot Set:&lt;/h3&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-ofFkTWEt7kw/U0evleXzgRI/AAAAAAAACl8/zg4_1dxmg7w/s1600/800px-Mandel_zoom_08_satellite_antenna.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The area of the Mandelbrot Set&lt;/strong&gt;
The Mandelbrot set is a fractal (illustrates self-similarity). The set is obtained from the quadratic recurrence equation,&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/proxy/V7ITPlrYZthFKEr263nwxpjVUiiLdwJ3L5z8rZPxVshqkDW1xj_BcYKUrf246BkzlwaXV5QoVZzFNUkmiXB6TuUKl8Y9l3nhVgA3dZr6_ovtk4rGCrb-AixpAtdrqCgkISYZDg56ngNsLPxZ6ys2h5hnDZXIlGU=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;with&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh4.googleusercontent.com/proxy/X-AGG1lSNsjhTrneJ3h2fypSNEr7abgYdF71JPMEwx24toeCKmXIa9c_9XKl09oRwaE1i_4Cx4AJ0tt9pg6Jn20iP6lveWG7K60LQjInQKJPAA=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;, where points&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh4.googleusercontent.com/proxy/Sz22hiBRGEIHg61Cft2B1Ngq6LjmT0TqvwbBIaH565JVFBbPbc1_AUAAQgs81OxuVd1KqFrCYZJo=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;in the complex plane for which the orbit of&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/proxy/LR4RXn0pCOL_pp956EEQ7ZXawp2p-vTPX_UjFP7oPeqA2kDvd1OoEsoB41Rb6piOeYSi1-EZ2lzInyCkRlQ4vzL5F6KGOReYfco-WxhwX2I=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;does not tend to infinity are in the set. The Mandelbrot set is a compact set, contained in the closed disk of radius 2 around the origin. Since it is contained in a disk of known area, it is possible to approximate the area of the Mandelbrot Set&amp;rsquo;s using Monte Carlo method.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-FCl6L4iNcbQ/Uo4VZENpRWI/AAAAAAAACFM/MpzH9iF2b3c/s400/use.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Java:&lt;/strong&gt;
Since Java does not inherently understand complex numbers, a &amp;ldquo;real&amp;rdquo; approach will be applied to perform the quadratic recurrence equation,&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/proxy/V7ITPlrYZthFKEr263nwxpjVUiiLdwJ3L5z8rZPxVshqkDW1xj_BcYKUrf246BkzlwaXV5QoVZzFNUkmiXB6TuUKl8Y9l3nhVgA3dZr6_ovtk4rGCrb-AixpAtdrqCgkISYZDg56ngNsLPxZ6ys2h5hnDZXIlGU=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;First, as shown in the figure above, inscribe the disk in a square of length 4 units. Let&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh4.googleusercontent.com/proxy/0yH1bkH6k3-YTHGlilL24aCKOeBoQY6IIs1otCW1XJZziPl873Drng-ae1OaB05EyYRvTp-xGlDOeyfE_vBhS5E=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;represent the coordinate along x-axis (real) and&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/proxy/dxhyDjv6XZgw-_WuwpK9p8L2LK7A-RFhcxXe-fn9uyjp7RObuV1kvVmcmuYlTr8oO_Te_rWY4ylDCAMtvdVgp6E=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;represent the coordinate along y axis. Now set&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/proxy/eP_4t-eW257n3jmR8D1kh4EEJ1tCPsiySrBJrsqqHw-ZBk4lL07CD6G3itIldJdehKKEzjywvisTTqD9LxeN2MRQnQ=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh4.googleusercontent.com/proxy/ZFARvm9iFhC_1Be81TOSDOf2Jho1NnN0L0WYIv-MO_249eSxbbNunvaDe4Svun8g20b8AGQEYpuTl38Q6ilzYM9A2Q=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;, where&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/proxy/hdeTD5wklsqEAljaDSnzAq7RFC4y_QjSvbKC_TSNLFZSYcOpoD5AANfGLwB95TiqmUV4OSujWjm8=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/proxy/k4rrnp9_gt6i9Zyf7jMI0qiROpdnvBXWqwQIWfzrgTRSkDHpLk198pua5NGt05fPHbyws5HqDftE=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;are randomly generated real numbers from [-2, 2]. Basically, the&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/proxy/hdeTD5wklsqEAljaDSnzAq7RFC4y_QjSvbKC_TSNLFZSYcOpoD5AANfGLwB95TiqmUV4OSujWjm8=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/proxy/k4rrnp9_gt6i9Zyf7jMI0qiROpdnvBXWqwQIWfzrgTRSkDHpLk198pua5NGt05fPHbyws5HqDftE=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;coordinates are being duplicated at this step to preserve the point&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh4.googleusercontent.com/proxy/Sz22hiBRGEIHg61Cft2B1Ngq6LjmT0TqvwbBIaH565JVFBbPbc1_AUAAQgs81OxuVd1KqFrCYZJo=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;. Next, iteratively compute the following from&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/proxy/rpzM0IBRXdvzJoamA8eeL5M5X8C1-x23i7_UE8_wT6sePiID0hgrA1EMyQjoWnids9gT_mqKcUn4evYYjnG4Tt6fcKgLu0YRpqQnXxT-nwpdyBbPTIcr3hutDaJfx6fR3meYBj5zEgZvpQw=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;(for programming purposes, choose a large Dwell Limit). Simultaneously, check if&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/proxy/u2tI5wMdfS6PewRi_P8jgvOKOfocArri-stZmD4ByAlFuq3A5lydC11XQzizAhdLmahxzXnVM8SEk362OxJUJrU2NBbtFjAORPjnrzla2qjGK9TG5I1-XYbHwg5oeI2YHBjHzEfjVz3lI5mYmXq9=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;. If yes, increase count (not in the set) by 1 and get out of the loop (since all points should be contained in the disk).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/proxy/m8TcApmBEEAw108G1VlY7-EvQ4Be6UvoxXt2M400U8pseBlJtkposiJNr1X8Q2cBZjMu9H6EBYFOfvGzTb5ceTC9qQSxihh-xbGA81wKh-tGP3I7xWrJENQKCdjGHxorHdQ2SZJ0OzbHgR0kDkr-iK9KOwWE8mQ7Ww=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lh6.googleusercontent.com/proxy/umqP60O-kSi-Pn9U9wOWkcr8q6dUag1pk_PQ0VRtJI7Yp2cwzwK3s6JsC3WS2j7sk8m8hp04espvb2DAOPK0JF37-PEIQvdGq_Q6GKKNQm2EaAwlrt_eoRBuTS9vHfE=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Compute the ratio of number of points that are in the set to total number of points used. Then multiply the area of square (16 units square) to get the approximate are of the Mandelbrot set.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java Code:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import java.util.Date;
import java.util.Random;

public class MandelbrotArea {

    public static int mcRep = 5000;
    public static int dwellLimit = 2048;
    

    /**
     * @return random double in [-2,2]
     */
    public static double random() {
        return (new Random().nextDouble() * 4) - 2;
    }

    /**
     * @param r: real part of the complex number
     * @param s: imaginary part of the complex number
     * @return
     */
    public static boolean isMandelbrotSet(double r, double s) {
        
        double a = r, b = s, temp;
        
        // Iterative function
        for (int j = 1; j &amp;lt;= dwellLimit; j++) {
            temp = a;
            a = Math.pow(a, 2) - Math.pow(b, 2) + r;
            b = (2 * temp * b) + s;
            
            if (Math.pow(a, 2) + Math.pow(b, 2) &amp;gt; 4) {
                return false;
            }
        }
        return true;
    }

    public static void main(String[] args) {
        long startTime = new Date().getTime();
        long count = 0;
        for (int i = 0; i &amp;lt;= mcRep; i++) {
            if (isMandelbrotSet(random(), random())) {
                count++;
            }
        }
        System.out.println(&amp;quot;Input -&amp;gt; DwellLimit: &amp;quot; + dwellLimit + &amp;quot;, McRep: &amp;quot; + mcRep);
        System.out.println(&amp;quot;Area: &amp;quot; + ((double) (count * 16)) / mcRep);
        System.out.println(&amp;quot;Execution time: &amp;quot; + (new Date().getTime() - startTime) + &amp;quot; ms&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input -&amp;gt; DwellLimit: 2048, McRep: 5000
Area: 1.5136
Execution time: 389 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;monte.Carlo &amp;lt;- 5000
x &amp;lt;- runif(monte.Carlo, -2, 2)
y &amp;lt;- runif(monte.Carlo, -2, 2)
list &amp;lt;- numeric(monte.Carlo)

for (j in 1:monte.Carlo){
  list[j] &amp;lt;- if (inmandelbrotset(complex(real = x[j], imaginary = y[j]))) 1 else 0
}
area&amp;lt;-mean(list)*16


# function that checks if a point E mandelbrot set
inmandelbrotset &amp;lt;- function(c)
{
  dwell.limit &amp;lt;- 2048
  z &amp;lt;- 0  
  for (i in 1:dwell.limit)
  { 
    z &amp;lt;- z ** 2 + c
    if (Mod(z) &amp;gt; 2)
    {
      return(FALSE)
    }
  }  
  return(TRUE)
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>The Faro Shuffle</title>
      <link>https://ayushsubedi.github.io/posts/faro_shuffle/</link>
      <pubDate>Wed, 05 Dec 2012 17:12:41 +0545</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/faro_shuffle/</guid>
      <description>&lt;h3 id=&#34;the-faro-shuffle&#34;&gt;The Faro Shuffle:&lt;/h3&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/proxy/HmByI7lf5sUIht42g1AmRxOmq0INAaxCGyZ52ojil8Q7lOjqRT0T3fXCUZs_YfG-emi-W5zXYcIuUY7VYuOT_ChzIXTNFjBqc03axiORyFZNoUQ-RsH8eNWJpqbFHoW33lwq14cZoVAJ6g=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;A Faro shuffle is probably one of the most intricate skills in an elite magician&amp;rsquo;s arsenal. Although it&amp;rsquo;s simple in concept, it is extremely difficult to perform and it typically needs years and years of practice. The idea of a shuffle is to randomize the cards, and since a typical shuffle is sloppy, that is usually true. However, a Faro shuffle is not random at all. In a perfect shuffle or a Faro shuffle the cards are divided exactly in half (top and bottom) and then interspersed alternately. Twenty one consecutive (out) Faro shuffles for a 50-card deck. However, it only takes eight consecutive Faro shuffles to bring a 52-card deck back to its original order. Interesting.
&lt;strong&gt;Java:&lt;/strong&gt;
If the number of cards in the deck is 12,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class outFaro {
 public static void main(String[] args) {

  // the number of card in the deck
  int numberofcardindeck = 12;
  // creating an array of cards
  int[] deck = new int[numberofcardindeck];

  // printing the order of cards in original deck
  System.out.println(&amp;quot;Original deck&amp;quot;);
  for (int i = 0; i &amp;lt; numberofcardindeck; i++) {
   deck[i] = i + 1;
   System.out.print(deck[i] + &amp;quot; &amp;quot;);
  }
  System.out.println();

  // dividing the cards in half
  int[] firsthalfdeck = new int[numberofcardindeck / 2];
  int[] secondhalfdeck = new int[numberofcardindeck / 2];

  // performing a (out) Faro shuffle
  for (int Faro = 1; Faro &amp;lt;= 50; Faro++) {

   for (int i = 0; i &amp;lt; numberofcardindeck / 2; i++) {
    firsthalfdeck[i] = deck[i];
    secondhalfdeck[i] = deck[i + (numberofcardindeck / 2)];
   }

   for (int i = 0; i &amp;lt; numberofcardindeck / 2; i++) {
    deck[2 * i] = firsthalfdeck[i];
    deck[2 * i + 1] = secondhalfdeck[i];
   }
   System.out.println();
   System.out.println(&amp;quot;Order under Faro Shuffle: &amp;quot; + Faro);
   for (int i = 0; i &amp;lt; numberofcardindeck; i++) {
    System.out.print(deck[i] + &amp;quot; &amp;quot;);
   }
   // done when the second card comes back to its original position
   if (deck[1] == 2) {
    break;
   }
  }
 }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Original deck
1 2 3 4 5 6 7 8 9 10 11 12 

Order under Faro Shuffle: 1
1 7 2 8 3 9 4 10 5 11 6 12 
Order under Faro Shuffle: 2
1 4 7 10 2 5 8 11 3 6 9 12 
Order under Faro Shuffle: 3
1 8 4 11 7 3 10 6 2 9 5 12 
Order under Faro Shuffle: 4
1 10 8 6 4 2 11 9 7 5 3 12 
Order under Faro Shuffle: 5
1 11 10 9 8 7 6 5 4 3 2 12 
Order under Faro Shuffle: 6
1 6 11 5 10 4 9 3 8 2 7 12 
Order under Faro Shuffle: 7
1 9 6 3 11 8 5 2 10 7 4 12 
Order under Faro Shuffle: 8
1 5 9 2 6 10 3 7 11 4 8 12 
Order under Faro Shuffle: 9
1 3 5 7 9 11 2 4 6 8 10 12 
Order under Faro Shuffle: 10
1 2 3 4 5 6 7 8 9 10 11 12 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After 10 out-Faro shuffles, the card returns to its original permutation. Therefore, 10 is the order of the permutation.&lt;/p&gt;
&lt;p&gt;The table below shows number of cards in a deck and the number of out-Faro shuffles required to bring it back to its original permutation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-KmHq4RSH4ms/Uq29yVj05wI/AAAAAAAACLM/2k8ZStuAFHE/s640/Untitled-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The definition of permutation and permutation group:&lt;/p&gt;
&lt;p&gt;“A permutation of a set A is a function from A to A that is both one-to-one and onto. A permutation group of a set A is a set of permutations of A that forms a group under function composition.”&lt;/p&gt;
&lt;p&gt;A Faro Shuffle is one-to-one and onto. At any frequency of the shuffle, every index (1-n) will have a unique card. Also, for every card, there is a unique index regardless of the frequency of the shuffle. The permutation for every “Number of cards” can be thought as a group under the operation - &lt;em&gt;FaroShuffle&lt;/em&gt;. Also, since “Number of Faro Shuffles” returns us back to the original permutation, we can establish it as the order of the permutation group.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-whe87B4VHc0/Uq3CE6GueDI/AAAAAAAACLY/g_dqBtk3rqM/s640/Una.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Theorem: &lt;em&gt;The order of a permutation of a finite set written in disjoint cycle form is the least common multiple of the lengths of the cycles.The order of a permutation of a finite set written in disjoint cycle form is the least common multiple of the lengths of the cycles.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is one of the most important Group Theory Theorems. Let us consider a 52-card deck to demonstrate this. From the Java code, the order is 8 when n is 52. Instead of looking at disjoint cycle form of the permutation to figure out the order of each element, we can also look at every permutation the original permutation has been to before returning to the original permutation. For n = 52, the table below shows all the permutations.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-B4_BNs2bQeA/Uq2Zi1lqTdI/AAAAAAAACKo/Cx615gOzaa8/s400/Untitled-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;From the table above, order of 1 and 52 = 1, order of 18 and 35 = 2 and order of rest of the elements = 8
The  L.C.M (1,2,8) = 8 is the order of the group according to the Theorem. This is also what we got from the Java code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conjectures / Proofs:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-DeHQjZrkGVo/Uq2c0tppv9I/AAAAAAAACK8/1gzd9lQiGzE/s640/Untitled-5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In-Faro and Out-Faro&lt;/strong&gt;
In an out-Faro shuffle, the top card from first half of the deck always remains on top. In an in-Faro shuffle, the top card from second half will be the new top card of the new shuffled deck.&lt;/p&gt;
&lt;p&gt;Since I did not have a deck of card with me, and I was bored, I wrote a very simple Android app to demonstrate in and out shuffle.&lt;/p&gt;
&lt;p&gt;Generating a random deck with 4 cards. Notice that the &lt;em&gt;Eight of Hearts&lt;/em&gt; is on top.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-fR-pQ6azcW4/Uq7GGeUNPqI/AAAAAAAACOo/C1BGTjCQ9-o/s400/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Out-Faro 1:  &lt;em&gt;Eight of Hearts&lt;/em&gt; is on top.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-f64pkNJmVR8/Uq7GWRD_b8I/AAAAAAAACOw/j8Qs84Y2P8w/s400/2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Out-Faro 2:  &lt;em&gt;Eight of Hearts&lt;/em&gt; is still on top and the deck is back in its original permutation. Therefore, order = 2.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-fR-pQ6azcW4/Uq7GGeUNPqI/AAAAAAAACOo/C1BGTjCQ9-o/s400/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In-Faro 1:  Using the same deck, &lt;em&gt;Eight of Hearts&lt;/em&gt; is no longer on top.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-RoXQAQWNgvw/Uq7HyrqFmRI/AAAAAAAACO8/uvGljin3cRk/s400/3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In-Faro 2:  Again&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-eZopVi0mdAI/Uq7IFsSKRMI/AAAAAAAACPE/WKf8Rn9D4zE/s400/4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In-Faro 3:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-Vx4p3xhUfxg/Uq7IGBRuyUI/AAAAAAAACPM/evS-FcN4jcs/s400/5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In-Faro 4: Back to its original order. Order = 4.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-w2GJfne76_s/Uq7IGXAUwSI/AAAAAAAACPQ/9zzmBMllX2Y/s400/6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;More screenshots:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-PhT--wNzS3E/Uq7JnQJtKGI/AAAAAAAACP0/AkEqRL5LHr8/s400/device-2013-12-16-151947.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-3CAkE5EPu-w/Uq7Jp7eIKxI/AAAAAAAACP8/ytswOcUmqbk/s400/device-2013-12-16-151958.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-ePVfCZMrQWk/Uq7JtzGGRwI/AAAAAAAACQM/jWqHUj49vJc/s400/device-2013-12-16-152030.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-WgONazrZPvU/Uq7Jy9f60CI/AAAAAAAACQc/kfB_kFQqtG8/s400/device-2013-12-16-152042.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/--SRvsM5UK7I/Uq7Jx-Xci4I/AAAAAAAACQU/qTUsHoc5Ty8/s400/device-2013-12-16-152050.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Another reason for writing the app was to see the connection between Binary Number System and Faro Shuffle. I read somewhere that magicians and gamblers use this for their advantage.&lt;/p&gt;
&lt;p&gt;Consider a random eight card deck.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-SMd8cvUS844/Uq7PPihPgbI/AAAAAAAACRM/Un7UIqS7LEk/s400/binary1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now, the trick is, to send the &lt;em&gt;Queen of Clubs&lt;/em&gt; to say for example, 7th position in the deck (6 cards on top of it), the gambler would perform two in-Faros and one out-Faro. 6 in binary is 110; so, for digit 1, the magician would perform an in-Faro and for 0, an out-Faro.&lt;/p&gt;
&lt;p&gt;1st in-Faro:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-DqmhoUID2Io/Uq7P1qVtGXI/AAAAAAAACRc/OXsCOC7M_mk/s400/binary2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;2nd in-Faro:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-FRMYpkOdQbM/Uq7P1JS4BCI/AAAAAAAACRY/0qE01kWzlHE/s400/binary3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;out-Faro:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-9KMuxP3ozb4/Uq7P1FJO6YI/AAAAAAAACRU/9ItWqREP3sw/s400/binary4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Queen of Clubs&lt;/em&gt; is now in the 7th position. Also, its really interesting that this works irrespective of the number of cards in the deck.&lt;/p&gt;
&lt;p&gt;I also found that the order of (2n+2) out-Faro shuffle is equal to the order of (2n) in-Faro shuffles.&lt;/p&gt;
&lt;p&gt;I find that pretty interesting and I do not really see that to be obvious. It also implies that for no 2n, In-Faro=Out-Faro (I think). I will be investigating on these more later.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-65LUDQXD348/Uq3ICctaxPI/AAAAAAAACLo/WYRQ_r6GCvM/s640/Untitled-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://4.bp.blogspot.com/-65LUDQXD348/Uq3ICctaxPI/AAAAAAAACLo/WYRQ_r6GCvM/s1600/Untitled-2.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>