<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Proof of Concept on Ayush Subedi</title>
    <link>https://ayushsubedi.github.io/categories/proof-of-concept/</link>
    <description>Recent content in Proof of Concept on Ayush Subedi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 11 Aug 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ayushsubedi.github.io/categories/proof-of-concept/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sentiment Analysis starter code</title>
      <link>https://ayushsubedi.github.io/posts/sentiment_analysis/</link>
      <pubDate>Wed, 11 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/sentiment_analysis/</guid>
      <description>&lt;h1 id=&#34;twitter-sentiment-analysis&#34;&gt;Twitter Sentiment Analysis&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.vox-cdn.com/thumbor/yeUcycrGq8vtOYotz9pjUZZn21o=/0x0:4096x1900/1200x800/filters:focal(1721x623:2375x1277)/cdn.vox-cdn.com/uploads/chorus_image/image/69613645/E613I_0WEAQh4r0.0.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;getting-data-from-twitter&#34;&gt;Getting data from twitter&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Using Tweepy (uses official twitter API)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;easy&lt;/li&gt;
&lt;li&gt;several limitations&lt;/li&gt;
&lt;li&gt;check &lt;a href=&#34;https://developer.twitter.com/en/docs/rate-limits&#34;&gt;https://developer.twitter.com/en/docs/rate-limits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Using Twint (unofficial)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;a little difficult&lt;/li&gt;
&lt;li&gt;less limitation&lt;/li&gt;
&lt;li&gt;amazing for large volume&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;analysis&#34;&gt;Analysis&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Vader sentiment using python package &lt;a href=&#34;https://towardsdatascience.com/sentimental-analysis-using-vader-a3415fef7664&#34;&gt;https://towardsdatascience.com/sentimental-analysis-using-vader-a3415fef7664&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Naive bayes for sentiment analysis (a little of DIY) &lt;a href=&#34;https://www.datacamp.com/community/tutorials/simplifying-sentiment-analysis-python&#34;&gt;https://www.datacamp.com/community/tutorials/simplifying-sentiment-analysis-python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Spacy package&lt;/li&gt;
&lt;li&gt;Gensim package&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;installation&#34;&gt;Installation&lt;/h1&gt;
&lt;h4 id=&#34;clone-the-repo&#34;&gt;Clone the repo&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/cloudfactory/sentiment_analysis_twitter_starter_code&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;cd-into-the-cloned-directory-and-create-a-virtualenv&#34;&gt;CD into the cloned directory and create a virtualenv&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;python -m venv env&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;enable-virtualenv&#34;&gt;Enable virtualenv&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;source env/bin/activate&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;install-dependency-packages-from-requirementstxt&#34;&gt;Install dependency packages from requirements.txt&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;oper-jupyter-lab-session&#34;&gt;Oper jupyter lab session&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;jupyter-lab&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;a-simple-twitter-sentiment-analysis-poc&#34;&gt;A simple twitter sentiment analysis poc&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tweepy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; tweepy &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; OAuthHandler
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; pd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Full documentation here: &lt;a href=&#34;https://docs.tweepy.org/en/stable/client.html#tweets&#34;&gt;https://docs.tweepy.org/en/stable/client.html#tweets&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;access-keys&#34;&gt;Access keys&lt;/h3&gt;
&lt;h4 id=&#34;apply-at-twitter-developer-and-receive-these&#34;&gt;Apply at twitter developer and receive these:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;API_SECRET_KEY &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fill this in&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;API_KEY &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fill this in&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ACCESS_TOKEN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fill this in&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ACCESS_TOKEN_SECRET &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fill this in&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TwitterClient&lt;/span&gt;(object):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Twitter Client
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Class constructor or initialization method.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# read keys from the secret credentials file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        api_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; API_KEY
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        api_secret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;API_SECRET_KEY
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        access_token &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ACCESS_TOKEN
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        access_token_secret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ACCESS_TOKEN_SECRET
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;auth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; OAuthHandler(api_key, api_secret)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;auth&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_access_token(access_token,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                       access_token_secret)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;api &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tweepy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;API(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;auth)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Error: Authentication error&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_tweets&lt;/span&gt;(self):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tweet &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;api&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;user_timeline(screen_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;kathmandupost&amp;#39;&lt;/span&gt;, count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; tweet
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;raw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; TwitterClient()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_tweets()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json_normalize([r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;_json &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; r &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; raw])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;created_at&lt;/th&gt;
      &lt;th&gt;id&lt;/th&gt;
      &lt;th&gt;id_str&lt;/th&gt;
      &lt;th&gt;text&lt;/th&gt;
      &lt;th&gt;truncated&lt;/th&gt;
      &lt;th&gt;source&lt;/th&gt;
      &lt;th&gt;in_reply_to_status_id&lt;/th&gt;
      &lt;th&gt;in_reply_to_status_id_str&lt;/th&gt;
      &lt;th&gt;in_reply_to_user_id&lt;/th&gt;
      &lt;th&gt;in_reply_to_user_id_str&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;user.profile_text_color&lt;/th&gt;
      &lt;th&gt;user.profile_use_background_image&lt;/th&gt;
      &lt;th&gt;user.has_extended_profile&lt;/th&gt;
      &lt;th&gt;user.default_profile&lt;/th&gt;
      &lt;th&gt;user.default_profile_image&lt;/th&gt;
      &lt;th&gt;user.following&lt;/th&gt;
      &lt;th&gt;user.follow_request_sent&lt;/th&gt;
      &lt;th&gt;user.notifications&lt;/th&gt;
      &lt;th&gt;user.translator_type&lt;/th&gt;
      &lt;th&gt;user.withheld_in_countries&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Tue Oct 26 01:20:38 +0000 2021&lt;/td&gt;
      &lt;td&gt;1452807348309868564&lt;/td&gt;
      &lt;td&gt;1452807348309868564&lt;/td&gt;
      &lt;td&gt;EDITORIAL: Protect paddy farmers\n\nEase of ac...&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;&amp;lt;a href=&#34;https://about.twitter.com/products/tw...&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;333333&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;none&lt;/td&gt;
      &lt;td&gt;[]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Tue Oct 26 00:45:00 +0000 2021&lt;/td&gt;
      &lt;td&gt;1452798380527161348&lt;/td&gt;
      &lt;td&gt;1452798380527161348&lt;/td&gt;
      &lt;td&gt;Despite some opposition, Oli appears to have p...&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;&amp;lt;a href=&#34;https://about.twitter.com/products/tw...&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;333333&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;none&lt;/td&gt;
      &lt;td&gt;[]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Mon Oct 25 23:15:00 +0000 2021&lt;/td&gt;
      &lt;td&gt;1452775731050782726&lt;/td&gt;
      &lt;td&gt;1452775731050782726&lt;/td&gt;
      &lt;td&gt;Over 100,000 doses of Pfizer-BioNtech vaccine ...&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;&amp;lt;a href=&#34;https://about.twitter.com/products/tw...&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;333333&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;none&lt;/td&gt;
      &lt;td&gt;[]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Mon Oct 25 21:45:00 +0000 2021&lt;/td&gt;
      &lt;td&gt;1452753082111209475&lt;/td&gt;
      &lt;td&gt;1452753082111209475&lt;/td&gt;
      &lt;td&gt;Congress may appoint deputy Speaker, leaving s...&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;&amp;lt;a href=&#34;https://about.twitter.com/products/tw...&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;333333&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;none&lt;/td&gt;
      &lt;td&gt;[]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Mon Oct 25 20:15:00 +0000 2021&lt;/td&gt;
      &lt;td&gt;1452730433033015296&lt;/td&gt;
      &lt;td&gt;1452730433033015296&lt;/td&gt;
      &lt;td&gt;Everything you need to know about the Covid-19...&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;&amp;lt;a href=&#34;https://about.twitter.com/products/tw...&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;333333&lt;/td&gt;
      &lt;td&gt;True&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;False&lt;/td&gt;
      &lt;td&gt;none&lt;/td&gt;
      &lt;td&gt;[]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows × 70 columns&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;0     EDITORIAL: Protect paddy farmers\n\nEase of ac...
1     Despite some opposition, Oli appears to have p...
2     Over 100,000 doses of Pfizer-BioNtech vaccine ...
3     Congress may appoint deputy Speaker, leaving s...
4     Everything you need to know about the Covid-19...
5     United States to provide 100,620 doses of Pfiz...
6     Paddy damage by freak rains estimated at Rs8.2...
7     Dalit representatives complain of social discr...
8     Consult Delhi for census in Kalapani, census b...
9     Supreme Court justices to boycott full court m...
10    London expands vehicle levy to improve air qua...
11    ‘Children are going to die’, UN agency warns a...
12    EDITORIAL: Railblock ahead\n\nDelay in operati...
13    Nepal reports 673 new Covid-19 cases, 13 death...
14    Whether it’s supply or demand, oil era heads f...
15    Justices to decide their further step after me...
16    Climate change: what are the economic stakes?\...
17    Oslo opens museum to “The Scream” painter Munc...
18    Everything you need to know about the Covid-19...
19    Fauci says vaccines for kids between 5-11 like...
Name: text, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;sentiment-analysis&#34;&gt;Sentiment analysis&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; vaderSentiment.vaderSentiment &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SentimentIntensityAnalyzer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sentiment_scores&lt;/span&gt;(sentence):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sid_obj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SentimentIntensityAnalyzer()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; sid_obj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;polarity_scores(sentence)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sentiment_scores&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;apply(sentiment_scores)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df[[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sentiment_scores&amp;#39;&lt;/span&gt;]]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;text&lt;/th&gt;
      &lt;th&gt;sentiment_scores&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;EDITORIAL: Protect paddy farmers\n\nEase of ac...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.0, &#39;neu&#39;: 0.779, &#39;pos&#39;: 0.221, &#39;comp...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Despite some opposition, Oli appears to have p...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.0, &#39;neu&#39;: 1.0, &#39;pos&#39;: 0.0, &#39;compound...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Over 100,000 doses of Pfizer-BioNtech vaccine ...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.0, &#39;neu&#39;: 0.872, &#39;pos&#39;: 0.128, &#39;comp...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Congress may appoint deputy Speaker, leaving s...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.0, &#39;neu&#39;: 1.0, &#39;pos&#39;: 0.0, &#39;compound...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Everything you need to know about the Covid-19...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.0, &#39;neu&#39;: 1.0, &#39;pos&#39;: 0.0, &#39;compound...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;United States to provide 100,620 doses of Pfiz...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.0, &#39;neu&#39;: 0.865, &#39;pos&#39;: 0.135, &#39;comp...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Paddy damage by freak rains estimated at Rs8.2...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.276, &#39;neu&#39;: 0.724, &#39;pos&#39;: 0.0, &#39;comp...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Dalit representatives complain of social discr...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.134, &#39;neu&#39;: 0.753, &#39;pos&#39;: 0.113, &#39;co...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Consult Delhi for census in Kalapani, census b...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.0, &#39;neu&#39;: 1.0, &#39;pos&#39;: 0.0, &#39;compound...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Supreme Court justices to boycott full court m...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.164, &#39;neu&#39;: 0.582, &#39;pos&#39;: 0.255, &#39;co...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;London expands vehicle levy to improve air qua...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.145, &#39;neu&#39;: 0.683, &#39;pos&#39;: 0.173, &#39;co...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;‘Children are going to die’, UN agency warns a...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.277, &#39;neu&#39;: 0.723, &#39;pos&#39;: 0.0, &#39;comp...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;EDITORIAL: Railblock ahead\n\nDelay in operati...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.113, &#39;neu&#39;: 0.887, &#39;pos&#39;: 0.0, &#39;comp...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;td&gt;Nepal reports 673 new Covid-19 cases, 13 death...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.17, &#39;neu&#39;: 0.83, &#39;pos&#39;: 0.0, &#39;compou...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;td&gt;Whether it’s supply or demand, oil era heads f...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.061, &#39;neu&#39;: 0.939, &#39;pos&#39;: 0.0, &#39;comp...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;td&gt;Justices to decide their further step after me...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.076, &#39;neu&#39;: 0.762, &#39;pos&#39;: 0.162, &#39;co...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;Climate change: what are the economic stakes?\...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.0, &#39;neu&#39;: 0.901, &#39;pos&#39;: 0.099, &#39;comp...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;17&lt;/th&gt;
      &lt;td&gt;Oslo opens museum to “The Scream” painter Munc...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.0, &#39;neu&#39;: 1.0, &#39;pos&#39;: 0.0, &#39;compound...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;td&gt;Everything you need to know about the Covid-19...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.0, &#39;neu&#39;: 1.0, &#39;pos&#39;: 0.0, &#39;compound...&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;td&gt;Fauci says vaccines for kids between 5-11 like...&lt;/td&gt;
      &lt;td&gt;{&#39;neg&#39;: 0.0, &#39;neu&#39;: 1.0, &#39;pos&#39;: 0.0, &#39;compound...&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sentiments &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([df, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sentiment_scores&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;apply(pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Series)], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)[[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;neg&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;neu&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pos&amp;#39;&lt;/span&gt;]]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sentiments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/style&gt;&lt;/p&gt;
&lt;table border=&#34;1&#34; class=&#34;dataframe&#34;&gt;
  &lt;thead&gt;
    &lt;tr style=&#34;text-align: right;&#34;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;text&lt;/th&gt;
      &lt;th&gt;neg&lt;/th&gt;
      &lt;th&gt;neu&lt;/th&gt;
      &lt;th&gt;pos&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;EDITORIAL: Protect paddy farmers\n\nEase of ac...&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.779&lt;/td&gt;
      &lt;td&gt;0.221&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Despite some opposition, Oli appears to have p...&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Over 100,000 doses of Pfizer-BioNtech vaccine ...&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.872&lt;/td&gt;
      &lt;td&gt;0.128&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Congress may appoint deputy Speaker, leaving s...&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Everything you need to know about the Covid-19...&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;United States to provide 100,620 doses of Pfiz...&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.865&lt;/td&gt;
      &lt;td&gt;0.135&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;Paddy damage by freak rains estimated at Rs8.2...&lt;/td&gt;
      &lt;td&gt;0.276&lt;/td&gt;
      &lt;td&gt;0.724&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;Dalit representatives complain of social discr...&lt;/td&gt;
      &lt;td&gt;0.134&lt;/td&gt;
      &lt;td&gt;0.753&lt;/td&gt;
      &lt;td&gt;0.113&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;Consult Delhi for census in Kalapani, census b...&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;Supreme Court justices to boycott full court m...&lt;/td&gt;
      &lt;td&gt;0.164&lt;/td&gt;
      &lt;td&gt;0.582&lt;/td&gt;
      &lt;td&gt;0.255&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;London expands vehicle levy to improve air qua...&lt;/td&gt;
      &lt;td&gt;0.145&lt;/td&gt;
      &lt;td&gt;0.683&lt;/td&gt;
      &lt;td&gt;0.173&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;‘Children are going to die’, UN agency warns a...&lt;/td&gt;
      &lt;td&gt;0.277&lt;/td&gt;
      &lt;td&gt;0.723&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;EDITORIAL: Railblock ahead\n\nDelay in operati...&lt;/td&gt;
      &lt;td&gt;0.113&lt;/td&gt;
      &lt;td&gt;0.887&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;13&lt;/th&gt;
      &lt;td&gt;Nepal reports 673 new Covid-19 cases, 13 death...&lt;/td&gt;
      &lt;td&gt;0.170&lt;/td&gt;
      &lt;td&gt;0.830&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;14&lt;/th&gt;
      &lt;td&gt;Whether it’s supply or demand, oil era heads f...&lt;/td&gt;
      &lt;td&gt;0.061&lt;/td&gt;
      &lt;td&gt;0.939&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;15&lt;/th&gt;
      &lt;td&gt;Justices to decide their further step after me...&lt;/td&gt;
      &lt;td&gt;0.076&lt;/td&gt;
      &lt;td&gt;0.762&lt;/td&gt;
      &lt;td&gt;0.162&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;16&lt;/th&gt;
      &lt;td&gt;Climate change: what are the economic stakes?\...&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;0.901&lt;/td&gt;
      &lt;td&gt;0.099&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;17&lt;/th&gt;
      &lt;td&gt;Oslo opens museum to “The Scream” painter Munc...&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;18&lt;/th&gt;
      &lt;td&gt;Everything you need to know about the Covid-19...&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;19&lt;/th&gt;
      &lt;td&gt;Fauci says vaccines for kids between 5-11 like...&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
      &lt;td&gt;1.000&lt;/td&gt;
      &lt;td&gt;0.000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h1 id=&#34;depending-on-the-threshold-you-create-you-can-also-label-something-as-positive-or-negative-sentiment-now&#34;&gt;Depending on the threshold you create, you can also label something as positive or negative sentiment now&lt;/h1&gt;
</description>
    </item>
    
    <item>
      <title>Nepal Vaccine Progress Twitter Bot</title>
      <link>https://ayushsubedi.github.io/posts/vaccine_progress/</link>
      <pubDate>Tue, 20 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/vaccine_progress/</guid>
      <description>&lt;h1 id=&#34;nepal-vaccine-progress-twitter-bot&#34;&gt;Nepal Vaccine Progress Twitter Bot&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/NepalVaccine&#34;&gt;https://twitter.com/NepalVaccine&lt;/a&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;Data Source: &lt;a href=&#34;https://github.com/owid/covid-19-data/blob/master/public/data/vaccinations/country_data/Nepal.csv&#34;&gt;https://github.com/owid/covid-19-data/blob/master/public/data/vaccinations/country_data/Nepal.csv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/ayushsubedi/vaccine_progress_bot/raw/main/display.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is a Twitter bot that shows progress on covid vaccination (full and partial) in Nepal.&lt;/p&gt;
&lt;h1 id=&#34;installation-for-contribution&#34;&gt;Installation for contribution&lt;/h1&gt;
&lt;h4 id=&#34;clone-the-repository&#34;&gt;Clone the repository&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://github.com/ayushsubedi/vaccine_progress_bot_nepal/
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;cd-into-the-cloned-directory-and-create-a-virtualenv&#34;&gt;CD into the cloned directory and create a virtualenv&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;python -m venv env
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;enable-virtualenv&#34;&gt;Enable virtualenv&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.\env\Scripts\activate
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;enable-virtualenv-windows&#34;&gt;Enable virtualenv (windows)&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.\env\Scripts\activate
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;install-dependency-packages-from-requirementstxt&#34;&gt;Install dependency packages from requirements.txt&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;run-flask-app&#34;&gt;Run flask app&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;source FLASK_APP=&amp;#34;app.py&amp;#34;
flask run
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;run-flask-app-windows&#34;&gt;Run flask app (windows)&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$env:FLASK_APP=&amp;#34;app.py&amp;#34;
flask run
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;env&#34;&gt;.env&lt;/h1&gt;
&lt;p&gt;Add Twitter keys and BasicAuth keys to the .env_sample file. Once complete rename it to .env&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kohokoho</title>
      <link>https://ayushsubedi.github.io/posts/kohokoho/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/kohokoho/</guid>
      <description>&lt;h1 id=&#34;kohokoho-क-ह-क-ह-&#34;&gt;kohokoho (को हो को हो !)&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://ayushsubedi.github.io/img/kohokoho.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Are you an aspiring data analyst? Do clients hesitate to give you their data because of all the sensitive information in it?&lt;/p&gt;
&lt;p&gt;Or, are you an entrepreneur hesitant to hire a data consultant due to the nature of your data?&lt;/p&gt;
&lt;p&gt;Mask your data using kohokoho (को हो को हो !)&lt;/p&gt;
&lt;p&gt;Kohokoho (को हो को हो) is a python package that anonymizes a dataset. Currently, it is still in its infancy and only supports a select few data types.&lt;/p&gt;
&lt;p&gt;Feel free to contribute with code (it&amp;rsquo;s all open source), or by giving it a better name :D&lt;/p&gt;
&lt;h4 id=&#34;installation&#34;&gt;Installation&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;pip install kohokoho&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/EQtBLYwDtucQ1qB1GK09adkjk&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/EQtBLYwDtucQ1qB1GK09adkjk.svg&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;installation-from-source&#34;&gt;Installation (from source)&lt;/h3&gt;
&lt;h4 id=&#34;clone-the-repository&#34;&gt;Clone the repository&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/ayushsubedi/kohokoho&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;cd-into-the-cloned-directory-and-create-a-virtualenv&#34;&gt;CD into the cloned directory and create a virtualenv&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;python -m venv env&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;enable-virtualenv&#34;&gt;Enable virtualenv&lt;/h3&gt;
&lt;p&gt;Windows&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.\env\Scripts\activate&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Mac/Linux&lt;/p&gt;
&lt;p&gt;&lt;code&gt;source env/bin/activate&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;install-dependency-packages-from-requirementstxt&#34;&gt;Install dependency packages from requirements.txt&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-the-app&#34;&gt;Run the app&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;python kohokoho.py --csv={location of csv file}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Package link: &lt;a href=&#34;https://pypi.org/project/kohokoho/&#34;&gt;https://pypi.org/project/kohokoho/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;test-it-here&#34;&gt;Test it here&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://kohokoho.herokuapp.com/&#34;&gt;https://kohokoho.herokuapp.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;version-o-demo&#34;&gt;Version-O Demo&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://ayushsubedi.github.io/img/kohokoho_demo.png&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Affirmations with Flutter</title>
      <link>https://ayushsubedi.github.io/posts/affirmations_dev/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/affirmations_dev/</guid>
      <description>&lt;h2 id=&#34;affirmations-with-flutter&#34;&gt;Affirmations with flutter&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://ayushsubedi.github.io/img/flutter.png&#34; alt=&#34;Affirmations with flutter&#34;&gt;&lt;/p&gt;
&lt;p&gt;It had been a while since I (subconsciously or not so subconsciously) pivoted my career from app development to data science. Man, I did not miss Android Studio clogging my base model laptop’s memory. However, my little cousin (who just ventured into app development) wanted help with one of the issues he was having. But, as someone who had not used semicolons and braces for almost couple of years, Dart was almost nauseating upon first glance.  I promised him I would  get around answering his queries, but after I built something simple first.&lt;/p&gt;
&lt;p&gt;Affirmations.dev provides quotes that are motivating to the devs. So, as a newbie in Flutter, it good to get all the positive reinforcement especially when Android Studio and the virtual device doesn’t leave much space for many Stackoverflow tabs.&lt;/p&gt;
&lt;h3 id=&#34;few-examples-of-what-affirmationsdev-returns&#34;&gt;Few examples of what affirmations.dev returns:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;// 20200927192236
// https://www.affirmations.dev/

{
  &amp;quot;affirmation&amp;quot;: &amp;quot;Your life is already a miracle of chance waiting for you to shape its destiny&amp;quot;
}



// 20200927194030
// https://www.affirmations.dev/

{
  &amp;quot;affirmation&amp;quot;: &amp;quot;It is not a sprint, it is a marathon. One step at a time&amp;quot;
}


// 20200927194048
// https://www.affirmations.dev/

{
  &amp;quot;affirmation&amp;quot;: &amp;quot;You are learning valuable lessons from yourself every day&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;complete-app&#34;&gt;Complete App&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;import &#39;dart:convert&#39;;

import &#39;package:flutter/material.dart&#39;;
import &#39;package:http/http.dart&#39; as http;

class AffirmationsModel{
  final String affirmation;
  AffirmationsModel({this.affirmation});

  factory AffirmationsModel.fromJson(final json){
    return AffirmationsModel(
      affirmation : json[&amp;quot;affirmation&amp;quot;]
    );
  }
}

Future&amp;lt;AffirmationsModel&amp;gt; fetchAffirmations() async {
  final response = await http.get(&#39;https://www.affirmations.dev/&#39;);
  if (response.statusCode == 200) {
    final jsonAffirmations = jsonDecode(response.body);
    return AffirmationsModel.fromJson(jsonAffirmations);
  } else {
    throw Exception(&#39;Failed&#39;);
  }
}

void main() {
  runApp(AffirmationsApp());
}

class AffirmationsApp extends StatefulWidget {
  AffirmationsApp({Key key}) : super(key: key);

  @override
  _AffirmationsAppState createState() {
    return _AffirmationsAppState();
  }
}

class _AffirmationsAppState extends State&amp;lt;AffirmationsApp&amp;gt; {
  Future&amp;lt;AffirmationsModel&amp;gt; _futureAffirmationsModel;

  @override
  void initState() {
    super.initState();
    _futureAffirmationsModel = fetchAffirmations();
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: &#39;Affirmations&#39;,
      theme: ThemeData(
        primarySwatch: Colors.pink,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      debugShowCheckedModeBanner: false,
      home: Scaffold(
          backgroundColor: Colors.deepPurpleAccent,
          appBar: AppBar(
            title: Text(&#39;Affirmations&#39;),
            centerTitle: true,
          ),
          body: Column(children: &amp;lt;Widget&amp;gt;[
            Container(
              alignment: Alignment.center,
              decoration: BoxDecoration(
                shape: BoxShape.circle,
                color: Colors.lightBlueAccent,
              ),
              // width: 300,
              height: 300,
              padding: EdgeInsets.all(20.0),
              margin: EdgeInsets.all(80.0),
              child: FutureBuilder&amp;lt;AffirmationsModel&amp;gt;(
                future: _futureAffirmationsModel,
                builder: (context, snapshot) {
                  if (snapshot.connectionState == ConnectionState.done &amp;amp;&amp;amp;
                      snapshot.hasData) {
                    return Text(snapshot.data.affirmation,
                        textAlign: TextAlign.center,
                        textScaleFactor: 1.4,
                        style: TextStyle(color: Colors.white));
                  } else if (snapshot.hasError) {
                    return Text(&amp;quot;${snapshot.error}&amp;quot;);
                  }
                  return CircularProgressIndicator();
                },
              ),
            ),
            Divider(),
            Container(
              child: RaisedButton(
                onPressed: () {
                  setState(() {
                    _futureAffirmationsModel = fetchAffirmations();
                  });
                },
                textColor: Colors.white,
                padding: const EdgeInsets.all(0.0),
                child: Container(
                  decoration: const BoxDecoration(
                    gradient: LinearGradient(
                      colors: &amp;lt;Color&amp;gt;[
                        Color(0xEEFF1461),
                        Color(0xDDFF1483),
                        Color(0xFFFF1493),
                      ],
                    ),
                  ),
                  padding: const EdgeInsets.all(30.0),
                  child:
                  const Text(&#39;INSPIRE ME&#39;, style: TextStyle(fontSize: 15)),
                ),
              ),
            )
          ])),
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Torpe Blockchain</title>
      <link>https://ayushsubedi.github.io/posts/torpe/</link>
      <pubDate>Sun, 28 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/torpe/</guid>
      <description>&lt;h1 id=&#34;torpe-blockchain-तरप-बलककचन&#34;&gt;Torpe Blockchain (तोर्पे ब्लोक्कचैन)&lt;/h1&gt;
&lt;h3 id=&#34;a-minimal-blockchain-data-structure-to-understand-the-blockchain-basics-like-hashing-nonce-states-genesis-blocks-etc&#34;&gt;A minimal blockchain data structure to understand the blockchain basics like hashing, nonce, states, genesis blocks etc.&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://ayushsubedi.github.io/img/blockchain.jpg&#34; alt=&#34;blockchain&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;hash-function&#34;&gt;Hash Function&lt;/h3&gt;
&lt;p&gt;A hash function is any function that can be used to map data of arbitrary size to data of a fixed size. The values returned by a hash function are called hash values, hash codes, digests, or simply hashes.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; hashlib
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hash_sha256&lt;/span&gt;(raw):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    raw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(raw)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; hashlib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sha256(raw)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hexdigest() 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hash_sha256(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;torpe_blockchain&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;e5367197a1f12480ec761306f2fa9d15b494d5a80e5a806713df9e60943f4faf&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hash_sha256(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;torpe_blockchain&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;e5367197a1f12480ec761306f2fa9d15b494d5a80e5a806713df9e60943f4faf&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hash_sha256(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;torpe_blockchaiN&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;71fe90af906a9afa507ee54287595df6d7267df05428b3f91429371ebd27cb3e&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hashes for the same text are the same as seen above.  Even when one character of the string is changed, the hash generated as a result seems to be completely random.&lt;/p&gt;
&lt;p&gt;SHA-256 collisions have not been found yet.&lt;/p&gt;
&lt;h3 id=&#34;nonce&#34;&gt;Nonce&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Number that can only be used once&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;An arbitrary numer used in cryptography to ensure uniqueness and prevent the rerunning of transactions (known as replay attack).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hash_sha256_nonce&lt;/span&gt;(raw):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    raw_bytes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(raw)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hashed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hashlib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sha256(raw_bytes)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hexdigest() 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    nonce &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (hashed[:&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;00000&amp;#39;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        nonce &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nonce&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        raw&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nonce&amp;#39;&lt;/span&gt;: nonce})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        raw_bytes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(raw)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hashed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hashlib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sha256(raw_bytes)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hexdigest() 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; raw, hashed
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print (hash_sha256_nonce({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;proof_of_work&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nonce&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;}))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;({&#39;hello&#39;: &#39;proof_of_work&#39;, &#39;nonce&#39;: 623228}, &#39;00000a9d45728c6f4d1eff383dab4d96b753495c8b312ecb5d1858116885ee55&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;proof-of-work&#34;&gt;Proof of work&lt;/h3&gt;
&lt;p&gt;The proof of work for this case will be to generate hashes with five leading zeros (by incrementing the nonce). This is the &amp;ldquo;mining&amp;rdquo; part.&lt;/p&gt;
&lt;h2 id=&#34;block&#34;&gt;Block&lt;/h2&gt;
&lt;p&gt;Blocks hold batches of valid transactions that are hashed and encoded into a Merkle tree Each block includes the cryptographic hash of the prior block in the blockchain, linking the two. The linked blocks form a chain. This iterative process confirms the integrity of the previous block, all the way back to the original genesis block.&lt;/p&gt;
&lt;h3 id=&#34;genesis-block&#34;&gt;Genesis Block&lt;/h3&gt;
&lt;p&gt;A genesis block or block0 is the first block of a block chain. The genesis block is almost always hardcoded into the software of the applications that utilize its block chain. It is a special case in that it does not reference a previous block&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Lets assume 5 person were given 100 coins each&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Person_1&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Person_2&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Person_3&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Person_4&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Person_5&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;block0_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;timestamp&amp;#39;&lt;/span&gt;: datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;previous&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transactions&amp;#39;&lt;/span&gt;: [state], 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nonce&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;raw, hashed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hash_sha256_nonce(block0_data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;block0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hash&amp;#39;&lt;/span&gt;: hashed,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;: raw,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;block0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;{&#39;hash&#39;: &#39;0000044b11859efa71c555a87a68090f1f602cf8bcd35bb5446c3c5532f5ad5e&#39;,
 &#39;data&#39;: {&#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 37, 44, 877080),
  &#39;index&#39;: 0,
  &#39;previous&#39;: None,
  &#39;transactions&#39;: [{&#39;Person_1&#39;: 100,
    &#39;Person_2&#39;: 100,
    &#39;Person_3&#39;: 100,
    &#39;Person_4&#39;: 100,
    &#39;Person_5&#39;: 100}],
  &#39;nonce&#39;: 2700821}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is the genesis block or block 0 here.&lt;/p&gt;
&lt;h3 id=&#34;transactions&#34;&gt;Transactions&lt;/h3&gt;
&lt;p&gt;Lets create some random transactions. The transactions for the demo purpose follow +x, -x semantic. See the examples below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;random_transaction&lt;/span&gt;(state):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    temp_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(state&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keys())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shuffle(temp_list)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# randomly select two persons&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    first_person &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pop()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    second_person &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pop()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    receive &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    give &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;receive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        first_person:receive, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        second_person:give
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;test_transactions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [random_transaction(state) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;test_transactions
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[{&#39;Person_3&#39;: 5, &#39;Person_5&#39;: -5},
 {&#39;Person_3&#39;: 7, &#39;Person_5&#39;: -7},
 {&#39;Person_4&#39;: 1, &#39;Person_1&#39;: -1},
 {&#39;Person_2&#39;: 4, &#39;Person_1&#39;: -4},
 {&#39;Person_4&#39;: 4, &#39;Person_5&#39;: -4}]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;updating-state&#34;&gt;Updating State&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update_state&lt;/span&gt;(transaction, state):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; state&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;copy()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; transaction:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        state[key] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; state&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(key, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; transaction[key]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; state
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; transaction &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; test_transactions:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; update_state(transaction, state)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;state
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;{&#39;Person_1&#39;: 95,
 &#39;Person_2&#39;: 104,
 &#39;Person_3&#39;: 112,
 &#39;Person_4&#39;: 105,
 &#39;Person_5&#39;: 84}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;valid-transactions&#34;&gt;Valid Transactions&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;check_transaction_validity&lt;/span&gt;(transaction, state):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# check neg vs pos&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; sum(transaction&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values()) &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# check if amount in wallet to give&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; transaction&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;keys():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; state&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(key, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; transaction[key] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; transaction &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; test_transactions:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print (check_transaction_validity(transaction, state))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;True
True
True
True
True
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# No balance&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print (check_transaction_validity({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;}, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;}))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;False
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Bad transaction&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print (check_transaction_validity({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;}, {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;B&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;}))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;False
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;initial-state&#34;&gt;Initial State&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Let us reset&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Lets assume 5 person were given 100 coins each&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Person_1&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Person_2&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Person_3&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Person_4&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Person_5&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blockchain &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Adding the genesis block&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blockchain&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(block0)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blockchain
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[{&#39;hash&#39;: &#39;0000044b11859efa71c555a87a68090f1f602cf8bcd35bb5446c3c5532f5ad5e&#39;,
  &#39;data&#39;: {&#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 37, 44, 877080),
   &#39;index&#39;: 0,
   &#39;previous&#39;: None,
   &#39;transactions&#39;: [{&#39;Person_1&#39;: 100,
     &#39;Person_2&#39;: 100,
     &#39;Person_3&#39;: 100,
     &#39;Person_4&#39;: 100,
     &#39;Person_5&#39;: 100}],
   &#39;nonce&#39;: 2700821}}]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;non-genesis-block--new-block&#34;&gt;Non-genesis block / New block&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;new_block&lt;/span&gt;(transactions, blockchain):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    previous_block &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; blockchain[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;timestamp&amp;#39;&lt;/span&gt;: datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;now(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;: previous_block[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;previous&amp;#39;&lt;/span&gt;: previous_block[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hash&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transactions&amp;#39;&lt;/span&gt;: transactions,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nonce&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    raw, hashed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hash_sha256_nonce(data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    block &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hash&amp;#39;&lt;/span&gt;: hashed, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;: raw}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; block
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sample_transactions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [random_transaction(state) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sample_transactions
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[{&#39;Person_5&#39;: 5, &#39;Person_1&#39;: -5},
 {&#39;Person_3&#39;: 10, &#39;Person_1&#39;: -10},
 {&#39;Person_2&#39;: 5, &#39;Person_4&#39;: -5},
 {&#39;Person_5&#39;: 9, &#39;Person_3&#39;: -9},
 {&#39;Person_3&#39;: 1, &#39;Person_2&#39;: -1},
 {&#39;Person_1&#39;: 9, &#39;Person_3&#39;: -9},
 {&#39;Person_1&#39;: 7, &#39;Person_3&#39;: -7},
 {&#39;Person_5&#39;: 4, &#39;Person_3&#39;: -4},
 {&#39;Person_5&#39;: 2, &#39;Person_4&#39;: -2},
 {&#39;Person_2&#39;: 4, &#39;Person_3&#39;: -4},
 {&#39;Person_3&#39;: 5, &#39;Person_5&#39;: -5},
 {&#39;Person_5&#39;: 1, &#39;Person_1&#39;: -1},
 {&#39;Person_1&#39;: 1, &#39;Person_2&#39;: -1},
 {&#39;Person_2&#39;: 7, &#39;Person_1&#39;: -7},
 {&#39;Person_2&#39;: 7, &#39;Person_5&#39;: -7},
 {&#39;Person_3&#39;: 2, &#39;Person_1&#39;: -2},
 {&#39;Person_3&#39;: 3, &#39;Person_1&#39;: -3},
 {&#39;Person_3&#39;: 3, &#39;Person_2&#39;: -3},
 {&#39;Person_3&#39;: 6, &#39;Person_1&#39;: -6},
 {&#39;Person_1&#39;: 5, &#39;Person_3&#39;: -5},
 {&#39;Person_2&#39;: 4, &#39;Person_3&#39;: -4},
 {&#39;Person_2&#39;: 1, &#39;Person_5&#39;: -1},
 {&#39;Person_1&#39;: 3, &#39;Person_2&#39;: -3},
 {&#39;Person_1&#39;: 10, &#39;Person_2&#39;: -10},
 {&#39;Person_3&#39;: 9, &#39;Person_5&#39;: -9},
 {&#39;Person_1&#39;: 3, &#39;Person_4&#39;: -3},
 {&#39;Person_4&#39;: 2, &#39;Person_3&#39;: -2},
 {&#39;Person_5&#39;: 6, &#39;Person_3&#39;: -6},
 {&#39;Person_2&#39;: 9, &#39;Person_1&#39;: -9},
 {&#39;Person_3&#39;: 3, &#39;Person_4&#39;: -3},
 {&#39;Person_3&#39;: 10, &#39;Person_4&#39;: -10},
 {&#39;Person_1&#39;: 9, &#39;Person_4&#39;: -9},
 {&#39;Person_2&#39;: 3, &#39;Person_1&#39;: -3},
 {&#39;Person_2&#39;: 6, &#39;Person_3&#39;: -6},
 {&#39;Person_4&#39;: 4, &#39;Person_1&#39;: -4},
 {&#39;Person_3&#39;: 7, &#39;Person_1&#39;: -7},
 {&#39;Person_3&#39;: 7, &#39;Person_1&#39;: -7},
 {&#39;Person_3&#39;: 5, &#39;Person_2&#39;: -5},
 {&#39;Person_3&#39;: 10, &#39;Person_2&#39;: -10},
 {&#39;Person_2&#39;: 1, &#39;Person_1&#39;: -1},
 {&#39;Person_1&#39;: 3, &#39;Person_5&#39;: -3},
 {&#39;Person_4&#39;: 4, &#39;Person_5&#39;: -4},
 {&#39;Person_1&#39;: 3, &#39;Person_2&#39;: -3},
 {&#39;Person_4&#39;: 1, &#39;Person_1&#39;: -1},
 {&#39;Person_5&#39;: 1, &#39;Person_4&#39;: -1},
 {&#39;Person_3&#39;: 5, &#39;Person_2&#39;: -5},
 {&#39;Person_1&#39;: 8, &#39;Person_4&#39;: -8},
 {&#39;Person_3&#39;: 8, &#39;Person_4&#39;: -8},
 {&#39;Person_3&#39;: 7, &#39;Person_4&#39;: -7},
 {&#39;Person_2&#39;: 1, &#39;Person_1&#39;: -1}]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;transactions-per-block&#34;&gt;Transactions per block&lt;/h3&gt;
&lt;p&gt;Bitcoin blocks used to contain fewer than 200 transactions and the largest number of transactions in a block was 1,976 at the time this answer was originally written (May 2013). In meanwhile (November 2017) the average number of transaction per block is well above 1500 with peaks above 2200.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Assume block size is 5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;transactions_per_block &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;transaction_block &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; transaction &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; sample_transactions:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; check_transaction_validity(transaction, state):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; update_state(transaction, state)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        transaction_block&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(transaction)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(transaction_block) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; transactions_per_block:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            blockchain&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(new_block(transaction_block, blockchain))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            transaction_block &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pprint
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pprint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PrettyPrinter()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; block &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; blockchain:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pprint(block)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;************************************************************************************&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;{&#39;data&#39;: {&#39;index&#39;: 0,
          &#39;nonce&#39;: 2700821,
          &#39;previous&#39;: None,
          &#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 37, 44, 877080),
          &#39;transactions&#39;: [{&#39;Person_1&#39;: 100,
                            &#39;Person_2&#39;: 100,
                            &#39;Person_3&#39;: 100,
                            &#39;Person_4&#39;: 100,
                            &#39;Person_5&#39;: 100}]},
 &#39;hash&#39;: &#39;0000044b11859efa71c555a87a68090f1f602cf8bcd35bb5446c3c5532f5ad5e&#39;}

************************************************************************************

{&#39;data&#39;: {&#39;index&#39;: 1,
          &#39;nonce&#39;: 2395688,
          &#39;previous&#39;: &#39;0000044b11859efa71c555a87a68090f1f602cf8bcd35bb5446c3c5532f5ad5e&#39;,
          &#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 37, 58, 781195),
          &#39;transactions&#39;: [{&#39;Person_1&#39;: -5, &#39;Person_5&#39;: 5},
                           {&#39;Person_1&#39;: -10, &#39;Person_3&#39;: 10},
                           {&#39;Person_2&#39;: 5, &#39;Person_4&#39;: -5},
                           {&#39;Person_3&#39;: -9, &#39;Person_5&#39;: 9},
                           {&#39;Person_2&#39;: -1, &#39;Person_3&#39;: 1}]},
 &#39;hash&#39;: &#39;00000303c468fe76fe73dfc089b856af02eda615c296ddde95c0c60999561048&#39;}

************************************************************************************

{&#39;data&#39;: {&#39;index&#39;: 2,
          &#39;nonce&#39;: 2475862,
          &#39;previous&#39;: &#39;00000303c468fe76fe73dfc089b856af02eda615c296ddde95c0c60999561048&#39;,
          &#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 38, 16, 454296),
          &#39;transactions&#39;: [{&#39;Person_1&#39;: 9, &#39;Person_3&#39;: -9},
                           {&#39;Person_1&#39;: 7, &#39;Person_3&#39;: -7},
                           {&#39;Person_3&#39;: -4, &#39;Person_5&#39;: 4},
                           {&#39;Person_4&#39;: -2, &#39;Person_5&#39;: 2},
                           {&#39;Person_2&#39;: 4, &#39;Person_3&#39;: -4}]},
 &#39;hash&#39;: &#39;00000804a078686673c26bd3d391649da822c27a9eb87c2a86f07be5be7667c0&#39;}

************************************************************************************

{&#39;data&#39;: {&#39;index&#39;: 3,
          &#39;nonce&#39;: 843595,
          &#39;previous&#39;: &#39;00000804a078686673c26bd3d391649da822c27a9eb87c2a86f07be5be7667c0&#39;,
          &#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 38, 34, 360082),
          &#39;transactions&#39;: [{&#39;Person_3&#39;: 5, &#39;Person_5&#39;: -5},
                           {&#39;Person_1&#39;: -1, &#39;Person_5&#39;: 1},
                           {&#39;Person_1&#39;: 1, &#39;Person_2&#39;: -1},
                           {&#39;Person_1&#39;: -7, &#39;Person_2&#39;: 7},
                           {&#39;Person_2&#39;: 7, &#39;Person_5&#39;: -7}]},
 &#39;hash&#39;: &#39;0000004fdf3bc704c17b3f38c8bcb0306443e24db0c5971c7494cea67e618fcd&#39;}

************************************************************************************

{&#39;data&#39;: {&#39;index&#39;: 4,
          &#39;nonce&#39;: 456491,
          &#39;previous&#39;: &#39;0000004fdf3bc704c17b3f38c8bcb0306443e24db0c5971c7494cea67e618fcd&#39;,
          &#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 38, 40, 443823),
          &#39;transactions&#39;: [{&#39;Person_1&#39;: -2, &#39;Person_3&#39;: 2},
                           {&#39;Person_1&#39;: -3, &#39;Person_3&#39;: 3},
                           {&#39;Person_2&#39;: -3, &#39;Person_3&#39;: 3},
                           {&#39;Person_1&#39;: -6, &#39;Person_3&#39;: 6},
                           {&#39;Person_1&#39;: 5, &#39;Person_3&#39;: -5}]},
 &#39;hash&#39;: &#39;000001ea0d5ee3360f087e8fe25e643a8e749af6b42bf8c3045303a3e4dc80a5&#39;}

************************************************************************************

{&#39;data&#39;: {&#39;index&#39;: 5,
          &#39;nonce&#39;: 1793595,
          &#39;previous&#39;: &#39;000001ea0d5ee3360f087e8fe25e643a8e749af6b42bf8c3045303a3e4dc80a5&#39;,
          &#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 38, 43, 617133),
          &#39;transactions&#39;: [{&#39;Person_2&#39;: 4, &#39;Person_3&#39;: -4},
                           {&#39;Person_2&#39;: 1, &#39;Person_5&#39;: -1},
                           {&#39;Person_1&#39;: 3, &#39;Person_2&#39;: -3},
                           {&#39;Person_1&#39;: 10, &#39;Person_2&#39;: -10},
                           {&#39;Person_3&#39;: 9, &#39;Person_5&#39;: -9}]},
 &#39;hash&#39;: &#39;00000101ed3a68b2340f553e1a373e7a590823fb34ee1e2f3c2e4ed44b647c2a&#39;}

************************************************************************************

{&#39;data&#39;: {&#39;index&#39;: 6,
          &#39;nonce&#39;: 618433,
          &#39;previous&#39;: &#39;00000101ed3a68b2340f553e1a373e7a590823fb34ee1e2f3c2e4ed44b647c2a&#39;,
          &#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 38, 56, 256050),
          &#39;transactions&#39;: [{&#39;Person_1&#39;: 3, &#39;Person_4&#39;: -3},
                           {&#39;Person_3&#39;: -2, &#39;Person_4&#39;: 2},
                           {&#39;Person_3&#39;: -6, &#39;Person_5&#39;: 6},
                           {&#39;Person_1&#39;: -9, &#39;Person_2&#39;: 9},
                           {&#39;Person_3&#39;: 3, &#39;Person_4&#39;: -3}]},
 &#39;hash&#39;: &#39;00000b2395e1efb034610e89196aafe9407417bbac1cd60f300adccea3cd880d&#39;}

************************************************************************************

{&#39;data&#39;: {&#39;index&#39;: 7,
          &#39;nonce&#39;: 4087255,
          &#39;previous&#39;: &#39;00000b2395e1efb034610e89196aafe9407417bbac1cd60f300adccea3cd880d&#39;,
          &#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 39, 0, 705135),
          &#39;transactions&#39;: [{&#39;Person_3&#39;: 10, &#39;Person_4&#39;: -10},
                           {&#39;Person_1&#39;: 9, &#39;Person_4&#39;: -9},
                           {&#39;Person_1&#39;: -3, &#39;Person_2&#39;: 3},
                           {&#39;Person_2&#39;: 6, &#39;Person_3&#39;: -6},
                           {&#39;Person_1&#39;: -4, &#39;Person_4&#39;: 4}]},
 &#39;hash&#39;: &#39;00000ef1b9a090a4b6636f86fa3d264dbcab13f5cf87d994637e656b6ec4abad&#39;}

************************************************************************************

{&#39;data&#39;: {&#39;index&#39;: 8,
          &#39;nonce&#39;: 991443,
          &#39;previous&#39;: &#39;00000ef1b9a090a4b6636f86fa3d264dbcab13f5cf87d994637e656b6ec4abad&#39;,
          &#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 39, 29, 983211),
          &#39;transactions&#39;: [{&#39;Person_1&#39;: -7, &#39;Person_3&#39;: 7},
                           {&#39;Person_1&#39;: -7, &#39;Person_3&#39;: 7},
                           {&#39;Person_2&#39;: -5, &#39;Person_3&#39;: 5},
                           {&#39;Person_2&#39;: -10, &#39;Person_3&#39;: 10},
                           {&#39;Person_1&#39;: -1, &#39;Person_2&#39;: 1}]},
 &#39;hash&#39;: &#39;0000021d8da5dab8b274a0146db6ddd6b1c12f34d751f84e9755fae1ed6a42b3&#39;}

************************************************************************************

{&#39;data&#39;: {&#39;index&#39;: 9,
          &#39;nonce&#39;: 24885,
          &#39;previous&#39;: &#39;0000021d8da5dab8b274a0146db6ddd6b1c12f34d751f84e9755fae1ed6a42b3&#39;,
          &#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 39, 37, 55377),
          &#39;transactions&#39;: [{&#39;Person_1&#39;: 3, &#39;Person_5&#39;: -3},
                           {&#39;Person_4&#39;: 4, &#39;Person_5&#39;: -4},
                           {&#39;Person_1&#39;: 3, &#39;Person_2&#39;: -3},
                           {&#39;Person_1&#39;: -1, &#39;Person_4&#39;: 1},
                           {&#39;Person_4&#39;: -1, &#39;Person_5&#39;: 1}]},
 &#39;hash&#39;: &#39;000002090602b338740f28ac66dfdc2f9949c8c40303574e0be08ad7033550bb&#39;}

************************************************************************************

{&#39;data&#39;: {&#39;index&#39;: 10,
          &#39;nonce&#39;: 545615,
          &#39;previous&#39;: &#39;000002090602b338740f28ac66dfdc2f9949c8c40303574e0be08ad7033550bb&#39;,
          &#39;timestamp&#39;: datetime.datetime(2020, 9, 9, 7, 39, 37, 232552),
          &#39;transactions&#39;: [{&#39;Person_2&#39;: -5, &#39;Person_3&#39;: 5},
                           {&#39;Person_1&#39;: 8, &#39;Person_4&#39;: -8},
                           {&#39;Person_3&#39;: 8, &#39;Person_4&#39;: -8},
                           {&#39;Person_3&#39;: 7, &#39;Person_4&#39;: -7},
                           {&#39;Person_1&#39;: -1, &#39;Person_2&#39;: 1}]},
 &#39;hash&#39;: &#39;00000d59159d699830d454d68d2077ed40da8ae060ec67c19be0814d35a61e6f&#39;}

************************************************************************************
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;the-current-state&#34;&gt;The current state&lt;/h3&gt;
&lt;h4 id=&#34;syncing-for-the-first-time&#34;&gt;Syncing for the first time&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;validate_block&lt;/span&gt;(block, parent, state):    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    error_msg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Error in &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; block[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# check block hash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; block[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hash&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; hash_sha256(block[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;]), error_msg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# check block indices&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; block[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; parent[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, error_msg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# check previous hash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; block[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;previous&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; parent[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hash&amp;#39;&lt;/span&gt;], error_msg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# validate all transactions&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; transaction &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; block[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transactions&amp;#39;&lt;/span&gt;]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;assert&lt;/span&gt; check_transaction_validity(transaction, state), error_msg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; update_state(transaction, state)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; state
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;check_chain&lt;/span&gt;(blockchain):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; transaction &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; blockchain[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transactions&amp;#39;&lt;/span&gt;]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; update_state(transaction, state)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    parent &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; blockchain[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; block &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; blockchain[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:]:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; validate_block(block, parent, state)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        parent &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; block
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; state
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;check_chain(blockchain)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;{&#39;Person_1&#39;: 94,
 &#39;Person_2&#39;: 107,
 &#39;Person_3&#39;: 145,
 &#39;Person_4&#39;: 55,
 &#39;Person_5&#39;: 99}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Birds, Plane, Superman</title>
      <link>https://ayushsubedi.github.io/posts/bird_plane_superman/</link>
      <pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/bird_plane_superman/</guid>
      <description>&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-VRnyjR8-1FQ/W5EZ4WhvRpI/AAAAAAAAOPM/rNiNP_X9haIqqSt4692inhEUiucUuILewCLcBGAs/s400/001109.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;br&gt;
I have been experimenting with Deep Learning models in &lt;a href=&#34;https://pytorch.org/&#34;&gt;PyTorch&lt;/a&gt; for a couple of weeks now. PyTorch is an open source python package that provides Tensor computation (similar to numpy) with GPU support. The dataset used for this particular blog post does no justice to the real-life usage of PyTorch for image classification. However, it serves as a general idea of how Transfer Learning can be used for more complicated image classification. Transfer learning, in a nutshell, is reusing a model developed for some other classification task, for your classification purposes. The dataset was created by scraping images from google image search.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Creating the dataset&lt;/strong&gt;&lt;br&gt;
For our dataset, we need images of birds, planes, and Superman. We will be using the &lt;a href=&#34;https://github.com/hellock/icrawler&#34;&gt;icrawler&lt;/a&gt; package to download the images from google image search.&lt;/p&gt;
&lt;p&gt;We repeat the same for birds and Superman. Once all the files have been downloaded, we will restructure the folders to contain our training, testing and validating samples. I am allocating 70% for training, 20% for validating and 10% for testing.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/--JBHptSr22k/W5EhKG9S0FI/AAAAAAAAOPY/b1JuDndQ6qAbXSgomBTZUZkjPRNEK-N-ACLcBGAs/s320/Capture.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Loading the data&lt;/strong&gt;&lt;br&gt;
PyTorch uses generators to read the data. Since datasets are usually large, it makes sense to not load everything in memory. Let&amp;rsquo;s import useful libraries that we will be using for classification.&lt;/p&gt;
&lt;p&gt;Now that we have imported useful libraries, we need to augment and normalize the images. Torchvision transforms is used to augment the training data with random scaling, rotations, mirroring and cropping. We do not need to rotate or flip our testing and validating sets. The data for each set will also be loaded with Torchivision&amp;rsquo;s DataLoader and ImageFolder.&lt;/p&gt;
&lt;p&gt;Let us visualize a few training images to understand the data augmentation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-LNJ3iv_C5Zs/W5Elb_VXgmI/AAAAAAAAOPk/ThiNb-NKIUU5fFx-2oEaO4FzRcMTBvuwgCLcBGAs/s640/download%2B%25281%2529.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Loading a pre-trained model&lt;/strong&gt;
We will be using Densenet for our purposes.&lt;/p&gt;
&lt;p&gt;The pre-trained model&amp;rsquo;s classifier takes 1920 features as input. We need to be consistent with that. However, the output feature for our case is 3 (bird, plane, and Superman).&lt;/p&gt;
&lt;p&gt;Now, let&amp;rsquo;s create our classifier and replace the model&amp;rsquo;s classifier.&lt;/p&gt;
&lt;p&gt;We are using ReLU activation function with random dropouts with a probability of 20% in the hidden layers. For the output layer, we are using LogSoftmax.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Training Criterion, Optimizer, and Decay&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Model Training and Testing&lt;/strong&gt;&lt;br&gt;
Let us calculate the accuracy of the model without training it first.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-heWEFxARMek/W5E49Y_TsPI/AAAAAAAAOPw/ha1h5ZBOs8ApPT0t5RcDsRWfvOXHwcnWACLcBGAs/s640/Capture.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The accuracy is pretty low at this time, which is expected. The &lt;em&gt;cuda&lt;/em&gt; parameter here is the boolean object passed for the availability of GPU hardware in the machine.&lt;/p&gt;
&lt;p&gt;Let us train the model.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-InDGqH9w1co/W5E520-6ANI/AAAAAAAAOP4/QJ_tiogtGmcdNkHB33ieKWk-UJ2AHfQqwCLcBGAs/s640/Capture.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Since GPU is supported, the training took around 10 mins. The validation accuracy is almost 99%. Let us check the accuracy over training data again.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-TwYWdmXYGyI/W5E7v95GTiI/AAAAAAAAOQE/FCIpQ7MPr4wXEFY_YqxsCl46ZdZlebg1ACLcBGAs/s640/Capture.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Image Preprocessing&lt;/strong&gt;
We declare a few functions to preprocess images and pass on the trained model.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-q3hQVfCnDmE/W5E9S5vSizI/AAAAAAAAOQQ/r1hP9xV1Tw4eoh6E5MzGbFGh7haNkn3BQCLcBGAs/s640/Untitled-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Predicting by passing an image&lt;/strong&gt;&lt;br&gt;
Since our model is ready and we have built functions that allows us to visualize, let us try it out on one of the sample images.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-mv2wuvBJIcA/W5E_R-qFjZI/AAAAAAAAOQk/HDEZYXgYYM8kYGVvg5w5Y3KNHkUZs8KJQCLcBGAs/s640/Capture.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;So, that is it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RSA encryption</title>
      <link>https://ayushsubedi.github.io/posts/rsa_encryption/</link>
      <pubDate>Fri, 12 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/rsa_encryption/</guid>
      <description>&lt;h2 id=&#34;rsa&#34;&gt;RSA&lt;/h2&gt;
&lt;p&gt;RSA (Rivest–Shamir–Adleman) is one of the first public-key cryptosystems and is widely used for secure data transmission. In such a cryptosystem, the encryption key is public and it is different from the decryption key which is kept secret (private). In RSA, this asymmetry is based on the practical difficulty of the factorization of the product of two large prime numbers, the &amp;ldquo;factoring problem&amp;rdquo;. The acronym RSA is made of the initial letters of the surnames of Ron Rivest, Adi Shamir, and Leonard Adleman, who first publicly described the algorithm in 1978. Clifford Cocks, an English mathematician working for the British intelligence agency Government Communications Headquarters (GCHQ), had developed an equivalent system in 1973, but this was not declassified until 1997&lt;/p&gt;
&lt;p&gt;A user of RSA creates and then publishes a public key based on two large prime numbers, along with an auxiliary value. The prime numbers must be kept secret. Anyone can use the public key to encrypt a message, but with currently published methods, and if the public key is large enough, only someone with knowledge of the prime numbers can decode the message feasibly. Breaking RSA encryption is known as the RSA problem. Whether it is as difficult as the factoring problem remains an open question.&lt;/p&gt;
&lt;p&gt;RSA is a relatively slow algorithm, and because of this, it is less commonly used to directly encrypt user data. More often, RSA passes encrypted shared keys for symmetric key cryptography which in turn can perform bulk encryption-decryption operations at much higher speed.&lt;/p&gt;
&lt;h3 id=&#34;imports&#34;&gt;Imports&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; primesieve &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; nth_prime
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;rsa-algorithm&#34;&gt;RSA Algorithm&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Take two distinct, large primes p and q (Ideally these have a similar byte-length)&lt;/li&gt;
&lt;li&gt;Multiply p and q and store the result in n&lt;/li&gt;
&lt;li&gt;Find the totient for n using the formula φ(n)=(p−1)(q−1)&lt;/li&gt;
&lt;li&gt;Take an e coprime that is greater, than 1 and less than n&lt;/li&gt;
&lt;li&gt;Find d using the formula d⋅e≡1modφ(n)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point, the pair (e, n) is the public key and the private key (d, n) is the private key.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nth_prime(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nth_prime(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;q
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print (p,q,n)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;29 47 1363
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;totient &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (p&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(q&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print (totient)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1288
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;totient&#34;&gt;Totient&lt;/h4&gt;
&lt;p&gt;In number theory, Euler&amp;rsquo;s totient function counts the positive integers up to a given integer n that are relatively prime to n. It is written using the Greek letter phi as φ(n) or ϕ(n), and may also be called Euler&amp;rsquo;s phi function. It can be defined more formally as the number of integers k in the range 1 ≤ k ≤ n for which the greatest common divisor gcd(n, k) is equal to 1. The integers k of this form are sometimes referred to as totatives of n.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/9/9b/EulerPhi.svg&#34; alt=&#34;title&#34;&gt;&lt;/p&gt;
&lt;p&gt;The line on the top represents distribution of prime numbers. The phi of a prime number is simply the (n-1)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Phi function is multiplicative (for relatively prime numbers).&lt;/li&gt;
&lt;li&gt;Therefore, phi of A times B where A and B are prime is (A-1) times (B-1)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;coprime&#34;&gt;Coprime&lt;/h4&gt;
&lt;p&gt;In number theory, two integers a and b are said to be relatively prime, mutually prime, or coprime (also written co-prime) if the only positive integer (factor) that divides both of them is 1. Consequently, any prime number that divides one does not divide the other. This is equivalent to their greatest common divisor (gcd) being 1&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; math &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; gcd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;modinv&lt;/span&gt;(a, m):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, m):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; x) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;coprimes&lt;/span&gt;(a):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; gcd(a, x) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; modinv(x,a) &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            l&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; l:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; modinv(x,a):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            l&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; l
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;coprime_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; coprimes(totient)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;secure_random &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SystemRandom()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; secure_random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;choice(coprime_list)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; modinv(e, totient)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;685
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;private-and-public-key-pairs&#34;&gt;Private and Public key pairs&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Public key pair:&amp;#39;&lt;/span&gt;, e, n)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Public key pair: 1021 1363
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Private key pair:&amp;#39;&lt;/span&gt;, d, n)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Private key pair: 685 1363
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;test&#34;&gt;Test&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;e &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; n
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1029
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;test&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;d &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; n
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;2
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;encryption-and-decryption&#34;&gt;Encryption and Decryption&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;encrypt&lt;/span&gt;(msg, pub, pri, mod):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    chars &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ord(x) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; list(msg)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cipher &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; char &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; chars:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cipher&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(chr(char&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;pub&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;mod))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(cipher)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;decrypt&lt;/span&gt;(msg, pub, pri, mod):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    chars &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ord(x) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; list(msg)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cipher &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; char &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; chars:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cipher&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(chr(char&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;pri&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;mod))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(cipher)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cipher &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; encrypt(msg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;, pub&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;e, pri&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;d, mod&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;decrypt(cipher, pub&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;e, pri&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;d, mod&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;hello&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;python-library&#34;&gt;Python library&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; rsa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Bob generates a keypair, and gives the public key to Alice. This is done such that Alice knows for sure that the key is really Bob’s (for example by handing over a USB stick that contains the key).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(bob_pub, bob_priv) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;newkeys(&lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(alice_pub, alice_priv) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;newkeys(&lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alice writes a message, and encodes it in UTF-8. The RSA module only operates on bytes, and not on strings, so this step is necessary.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello Bob!&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alice encrypts the message using Bob’s public key, and sends the encrypted message&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cipher &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encrypt(message, bob_pub)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Bob receives the message, and decrypts it with his private key.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;decrypt_cipher &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;decrypt(cipher, bob_priv)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print (decrypt_cipher)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;b&#39;hello Bob!&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since Bob kept his private key private, Alice can be sure that he is the only one who can read the message. Bob does not know for sure that it was Alice that sent the message, since she didn’t sign it.&lt;/p&gt;
&lt;h3 id=&#34;signature&#34;&gt;Signature&lt;/h3&gt;
&lt;p&gt;Suppose Alice uses Bob&amp;rsquo;s public key to send him an encrypted message. In the message, she can claim to be Alice but Bob has no way of verifying that the message was actually from Alice since anyone can use Bob&amp;rsquo;s public key to send him encrypted messages. In order to verify the origin of a message, RSA can also be used to sign a message.&lt;/p&gt;
&lt;p&gt;Suppose Alice wishes to send a signed message to Bob. She can use her own private key to do so. She produces a hash value of the message, raises it to the power of d (modulo n) (as she does when decrypting a message), and attaches it as a &amp;ldquo;signature&amp;rdquo; to the message. When Bob receives the signed message, he uses the same hash algorithm in conjunction with Alice&amp;rsquo;s public key. He raises the signature to the power of e (modulo n) (as he does when encrypting a message), and compares the resulting hash value with the message&amp;rsquo;s actual hash value. If the two agree, he knows that the author of the message was in possession of Alice&amp;rsquo;s private key, and that the message has not been tampered with since.&lt;/p&gt;
&lt;p&gt;This works because multiplication is commutative so {\displaystyle h=hash(m);(h^{e})^{d}=h^{ed}=h^{de}=(h^{d})^{e}\equiv h{\pmod {n}}} {\displaystyle h=hash(m);(h^{e})^{d}=h^{ed}=h^{de}=(h^{d})^{e}\equiv h{\pmod {n}}} Thus, the keys may be swapped without loss of generality, that is a private key of a key pair may be used either to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;signature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sign(message, alice_priv, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SHA-1&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verify(message, signature, alice_pub)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;SHA-1&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;complete&#34;&gt;Complete&lt;/h3&gt;
&lt;p&gt;Bob and Alice generate a keypair and share public keys.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(bob_pub, bob_priv) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;newkeys(&lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(alice_pub, alice_priv) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;newkeys(&lt;span style=&#34;color:#ae81ff&#34;&gt;512&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alice writes a message.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hey Bob!&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf8&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alice signs the message with private key&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;signature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sign(message, alice_priv, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SHA-1&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alice encrypts the message using Bob’s public key, and sends the encrypted message&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cipher &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encrypt(message, bob_pub)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Bob receives the message and checks for authenticity using alice&amp;rsquo;s public key&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verify(message, signature, alice_pub)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;SHA-1&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bob decrypts the message using his private key&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;decrypt_cipher &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;decrypt(cipher, bob_priv)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print (decrypt_cipher)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;b&#39;hey Bob!&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;signature
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;b&#39;\x07Of\xabW^\x0b\xaeFh\x01L\xf3\x11\xe0\xe9\\\x99r\xc9\x1c\x044\x11\xfc{5\xa3_ \xeb\xba\xf8\x84b\x1e\xb7\xadK)\xdf\x9b\x8f|\xc4&amp;gt;\x89\x9d\xdf\x98OI\xc1\x87\xc2\xdd\xf3\xf6\x16\xae2`my&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>