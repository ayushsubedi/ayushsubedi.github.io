<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Faro on Ayush Subedi</title>
    <link>https://ayushsubedi.github.io/tags/faro/</link>
    <description>Recent content in Faro on Ayush Subedi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 05 Dec 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ayushsubedi.github.io/tags/faro/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Faro Shuffle</title>
      <link>https://ayushsubedi.github.io/posts/faro_shuffle/</link>
      <pubDate>Wed, 05 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>https://ayushsubedi.github.io/posts/faro_shuffle/</guid>
      <description>&lt;h3 id=&#34;the-faro-shuffle&#34;&gt;The Faro Shuffle:&lt;/h3&gt;
&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;https://lh5.googleusercontent.com/proxy/HmByI7lf5sUIht42g1AmRxOmq0INAaxCGyZ52ojil8Q7lOjqRT0T3fXCUZs_YfG-emi-W5zXYcIuUY7VYuOT_ChzIXTNFjBqc03axiORyFZNoUQ-RsH8eNWJpqbFHoW33lwq14cZoVAJ6g=s0-d&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;A Faro shuffle is probably one of the most intricate skills in an elite magician&amp;rsquo;s arsenal. Although it&amp;rsquo;s simple in concept, it is extremely difficult to perform and it typically needs years and years of practice. The idea of a shuffle is to randomize the cards, and since a typical shuffle is sloppy, that is usually true. However, a Faro shuffle is not random at all. In a perfect shuffle or a Faro shuffle the cards are divided exactly in half (top and bottom) and then interspersed alternately. Twenty one consecutive (out) Faro shuffles for a 50-card deck. However, it only takes eight consecutive Faro shuffles to bring a 52-card deck back to its original order. Interesting.
&lt;strong&gt;Java:&lt;/strong&gt;
If the number of cards in the deck is 12,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class outFaro {
 public static void main(String[] args) {

  // the number of card in the deck
  int numberofcardindeck = 12;
  // creating an array of cards
  int[] deck = new int[numberofcardindeck];

  // printing the order of cards in original deck
  System.out.println(&amp;quot;Original deck&amp;quot;);
  for (int i = 0; i &amp;lt; numberofcardindeck; i++) {
   deck[i] = i + 1;
   System.out.print(deck[i] + &amp;quot; &amp;quot;);
  }
  System.out.println();

  // dividing the cards in half
  int[] firsthalfdeck = new int[numberofcardindeck / 2];
  int[] secondhalfdeck = new int[numberofcardindeck / 2];

  // performing a (out) Faro shuffle
  for (int Faro = 1; Faro &amp;lt;= 50; Faro++) {

   for (int i = 0; i &amp;lt; numberofcardindeck / 2; i++) {
    firsthalfdeck[i] = deck[i];
    secondhalfdeck[i] = deck[i + (numberofcardindeck / 2)];
   }

   for (int i = 0; i &amp;lt; numberofcardindeck / 2; i++) {
    deck[2 * i] = firsthalfdeck[i];
    deck[2 * i + 1] = secondhalfdeck[i];
   }
   System.out.println();
   System.out.println(&amp;quot;Order under Faro Shuffle: &amp;quot; + Faro);
   for (int i = 0; i &amp;lt; numberofcardindeck; i++) {
    System.out.print(deck[i] + &amp;quot; &amp;quot;);
   }
   // done when the second card comes back to its original position
   if (deck[1] == 2) {
    break;
   }
  }
 }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Original deck
1 2 3 4 5 6 7 8 9 10 11 12 

Order under Faro Shuffle: 1
1 7 2 8 3 9 4 10 5 11 6 12 
Order under Faro Shuffle: 2
1 4 7 10 2 5 8 11 3 6 9 12 
Order under Faro Shuffle: 3
1 8 4 11 7 3 10 6 2 9 5 12 
Order under Faro Shuffle: 4
1 10 8 6 4 2 11 9 7 5 3 12 
Order under Faro Shuffle: 5
1 11 10 9 8 7 6 5 4 3 2 12 
Order under Faro Shuffle: 6
1 6 11 5 10 4 9 3 8 2 7 12 
Order under Faro Shuffle: 7
1 9 6 3 11 8 5 2 10 7 4 12 
Order under Faro Shuffle: 8
1 5 9 2 6 10 3 7 11 4 8 12 
Order under Faro Shuffle: 9
1 3 5 7 9 11 2 4 6 8 10 12 
Order under Faro Shuffle: 10
1 2 3 4 5 6 7 8 9 10 11 12 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After 10 out-Faro shuffles, the card returns to its original permutation. Therefore, 10 is the order of the permutation.&lt;/p&gt;
&lt;p&gt;The table below shows number of cards in a deck and the number of out-Faro shuffles required to bring it back to its original permutation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-KmHq4RSH4ms/Uq29yVj05wI/AAAAAAAACLM/2k8ZStuAFHE/s640/Untitled-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The definition of permutation and permutation group:&lt;/p&gt;
&lt;p&gt;“A permutation of a set A is a function from A to A that is both one-to-one and onto. A permutation group of a set A is a set of permutations of A that forms a group under function composition.”&lt;/p&gt;
&lt;p&gt;A Faro Shuffle is one-to-one and onto. At any frequency of the shuffle, every index (1-n) will have a unique card. Also, for every card, there is a unique index regardless of the frequency of the shuffle. The permutation for every “Number of cards” can be thought as a group under the operation - &lt;em&gt;FaroShuffle&lt;/em&gt;. Also, since “Number of Faro Shuffles” returns us back to the original permutation, we can establish it as the order of the permutation group.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-whe87B4VHc0/Uq3CE6GueDI/AAAAAAAACLY/g_dqBtk3rqM/s640/Una.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Theorem: &lt;em&gt;The order of a permutation of a finite set written in disjoint cycle form is the least common multiple of the lengths of the cycles.The order of a permutation of a finite set written in disjoint cycle form is the least common multiple of the lengths of the cycles.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is one of the most important Group Theory Theorems. Let us consider a 52-card deck to demonstrate this. From the Java code, the order is 8 when n is 52. Instead of looking at disjoint cycle form of the permutation to figure out the order of each element, we can also look at every permutation the original permutation has been to before returning to the original permutation. For n = 52, the table below shows all the permutations.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-B4_BNs2bQeA/Uq2Zi1lqTdI/AAAAAAAACKo/Cx615gOzaa8/s400/Untitled-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;From the table above, order of 1 and 52 = 1, order of 18 and 35 = 2 and order of rest of the elements = 8
The  L.C.M (1,2,8) = 8 is the order of the group according to the Theorem. This is also what we got from the Java code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conjectures / Proofs:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-DeHQjZrkGVo/Uq2c0tppv9I/AAAAAAAACK8/1gzd9lQiGzE/s640/Untitled-5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In-Faro and Out-Faro&lt;/strong&gt;
In an out-Faro shuffle, the top card from first half of the deck always remains on top. In an in-Faro shuffle, the top card from second half will be the new top card of the new shuffled deck.&lt;/p&gt;
&lt;p&gt;Since I did not have a deck of card with me, and I was bored, I wrote a very simple Android app to demonstrate in and out shuffle.&lt;/p&gt;
&lt;p&gt;Generating a random deck with 4 cards. Notice that the &lt;em&gt;Eight of Hearts&lt;/em&gt; is on top.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-fR-pQ6azcW4/Uq7GGeUNPqI/AAAAAAAACOo/C1BGTjCQ9-o/s400/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Out-Faro 1:  &lt;em&gt;Eight of Hearts&lt;/em&gt; is on top.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-f64pkNJmVR8/Uq7GWRD_b8I/AAAAAAAACOw/j8Qs84Y2P8w/s400/2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Out-Faro 2:  &lt;em&gt;Eight of Hearts&lt;/em&gt; is still on top and the deck is back in its original permutation. Therefore, order = 2.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-fR-pQ6azcW4/Uq7GGeUNPqI/AAAAAAAACOo/C1BGTjCQ9-o/s400/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In-Faro 1:  Using the same deck, &lt;em&gt;Eight of Hearts&lt;/em&gt; is no longer on top.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-RoXQAQWNgvw/Uq7HyrqFmRI/AAAAAAAACO8/uvGljin3cRk/s400/3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In-Faro 2:  Again&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-eZopVi0mdAI/Uq7IFsSKRMI/AAAAAAAACPE/WKf8Rn9D4zE/s400/4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In-Faro 3:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-Vx4p3xhUfxg/Uq7IGBRuyUI/AAAAAAAACPM/evS-FcN4jcs/s400/5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In-Faro 4: Back to its original order. Order = 4.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-w2GJfne76_s/Uq7IGXAUwSI/AAAAAAAACPQ/9zzmBMllX2Y/s400/6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;More screenshots:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-PhT--wNzS3E/Uq7JnQJtKGI/AAAAAAAACP0/AkEqRL5LHr8/s400/device-2013-12-16-151947.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-3CAkE5EPu-w/Uq7Jp7eIKxI/AAAAAAAACP8/ytswOcUmqbk/s400/device-2013-12-16-151958.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-ePVfCZMrQWk/Uq7JtzGGRwI/AAAAAAAACQM/jWqHUj49vJc/s400/device-2013-12-16-152030.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-WgONazrZPvU/Uq7Jy9f60CI/AAAAAAAACQc/kfB_kFQqtG8/s400/device-2013-12-16-152042.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/--SRvsM5UK7I/Uq7Jx-Xci4I/AAAAAAAACQU/qTUsHoc5Ty8/s400/device-2013-12-16-152050.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Another reason for writing the app was to see the connection between Binary Number System and Faro Shuffle. I read somewhere that magicians and gamblers use this for their advantage.&lt;/p&gt;
&lt;p&gt;Consider a random eight card deck.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-SMd8cvUS844/Uq7PPihPgbI/AAAAAAAACRM/Un7UIqS7LEk/s400/binary1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now, the trick is, to send the &lt;em&gt;Queen of Clubs&lt;/em&gt; to say for example, 7th position in the deck (6 cards on top of it), the gambler would perform two in-Faros and one out-Faro. 6 in binary is 110; so, for digit 1, the magician would perform an in-Faro and for 0, an out-Faro.&lt;/p&gt;
&lt;p&gt;1st in-Faro:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-DqmhoUID2Io/Uq7P1qVtGXI/AAAAAAAACRc/OXsCOC7M_mk/s400/binary2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;2nd in-Faro:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-FRMYpkOdQbM/Uq7P1JS4BCI/AAAAAAAACRY/0qE01kWzlHE/s400/binary3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;out-Faro:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-9KMuxP3ozb4/Uq7P1FJO6YI/AAAAAAAACRU/9ItWqREP3sw/s400/binary4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Queen of Clubs&lt;/em&gt; is now in the 7th position. Also, its really interesting that this works irrespective of the number of cards in the deck.&lt;/p&gt;
&lt;p&gt;I also found that the order of (2n+2) out-Faro shuffle is equal to the order of (2n) in-Faro shuffles.&lt;/p&gt;
&lt;p&gt;I find that pretty interesting and I do not really see that to be obvious. It also implies that for no 2n, In-Faro=Out-Faro (I think). I will be investigating on these more later.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-65LUDQXD348/Uq3ICctaxPI/AAAAAAAACLo/WYRQ_r6GCvM/s640/Untitled-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://4.bp.blogspot.com/-65LUDQXD348/Uq3ICctaxPI/AAAAAAAACLo/WYRQ_r6GCvM/s1600/Untitled-2.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>